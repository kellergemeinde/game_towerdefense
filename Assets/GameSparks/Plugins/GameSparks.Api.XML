<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GameSparks.Api</name>
    </assembly>
    <members>
        <member name="T:GameSparks.Core.FileUploader">
            <summary>
            Internal class for uploading Data via the GameSparks Upload API.
            </summary>
        </member>
        <member name="T:GameSparks.Core.GSEnumerable`1">
            <summary>
            Factory for arrays of typed GSData
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSEnumerable`1.#ctor(System.Collections.Generic.List{System.Object},System.Func{GameSparks.Core.GSData,`0})">
            <summary>
            Constructor
            </summary>
            <param name="data">data which will be used to create the instances from</param>
            <param name="creator">factory method to use for creation of the instances</param>
        </member>
        <member name="M:GameSparks.Core.GSEnumerable`1.GetEnumerator">
            <summary>
            For each entry in the array, runs the creator. 
            </summary>
            <returns>An instance of T for every entry in the array</returns>
        </member>
        <member name="T:GameSparks.Core.GSInstance">
            <summary>
            Represents a connection to the GameSparks backend. 
            This class connects the <see cref="T:GameSparks.Core.IGSPlatform"/> implementation with the GameSparks backend. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSInstance.GetInstance(System.String)">
            <summary>
            Constructor. Creates a new connection to the GameSparks backend.
            </summary>
            <param name="name">Name of the instance. If an instance already exists with this name it will be returned </param>
        </member>
        <member name="M:GameSparks.Core.GSInstance.RemoveDurableQueueEntry(GameSparks.Core.GSRequest)">
            <summary>
            Removes a request from the durable queue. This will prevent the SDK from further trying to send this request. 
            </summary>
            <param name="requestToRemove"></param>
            <returns></returns>
        </member>
        <member name="M:GameSparks.Core.GSInstance.Initialise(GameSparks.Core.IGSPlatform)">
            <summary>
            Initialise GameSparks with a given platform implementation. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSInstance.ShutDown(System.Action)">
            <summary>
            Shutdown and call the onDone callback when the shutdown is complete. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSInstance.Reconnect">
            <summary>
            Reconnect to the GameSparks service. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSInstance.Disconnect">
            <summary>
            Stops all connections. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSInstance.Reset">
            <summary>
            Stops all connections, resets the authentication token and establishes a new connection to the service. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSInstance.Send(GameSparks.Core.GSRequest)">
            <summary>
            Send the given request. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSInstance.SendDurable(GameSparks.Core.GSRequest)">
            <summary>
            Send the given request durable. 
            Durable requests are persisted automatically. 
            If it cannot be send right now the sdk will try to send it later. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSInstance.GSPlatform">
            <summary>
            Gets or sets the GS platform instance related to this GSInstance.
            </summary>
            <value>The GS platform.</value>
        </member>
        <member name="P:GameSparks.Core.GSInstance.Name">
            <summary>
            The name of this instance
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSInstance.Available">
            <summary>
            True if a connection to the service is available for use. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSInstance.Authenticated">
            <summary>
            True if a connection is available and the user is authenticated. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSInstance.TraceMessages">
            <summary>
            If set true the SDK will provide debug information via <see cref="M:GameSparks.Core.IGSPlatform.DebugMsg(System.String)"/>
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSInstance.DurableQueueRunning">
            <summary>
            Indicates if requests marked as durable will be sent when network is available. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSInstance.DurableQueueEntries">
            <summary>
            A list with all requests marked as durable, which are not yet sent. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSInstance.RequestQueueCount">
            <summary>
            Whenever a request is sent it is added to a request queue. 
            Each request has its own time out. 
            This can used to determine how many requests are not yet sent or have not yet timed out. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSInstance.GameSparksAvailable">
            <summary>
            Callback which is triggered whenever the service becomes available or the connection to the service is lost. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSInstance.GameSparksAuthenticated">
            <summary>
            Callback which is triggered whenever authenticated player changes. 
            </summary>
        </member>
        <member name="T:GameSparks.Core.GSObject">
            <summary>
            Data container with type.
            </summary>
        </member>
        <member name="T:GameSparks.Core.GSRequestData">
            <summary>
            Data container for request data.
            </summary>
        </member>
        <member name="T:GameSparks.Core.GSData">
            <summary>
            Basic data container for all (json) supported data types. 
            </summary>
        </member>
        <member name="T:GameSparks.Core.IGSData">
            <summary>
            Interface for data containers
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.#ctor">
            <summary>
            Create a new, empty instance. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Create a new instance and use the data of the given wrapper as BaseData.
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="M:GameSparks.Core.GSData.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new instance and use the given data as BaseData.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:GameSparks.Core.GSData.ContainsKey(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetString(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetInt(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetLong(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetNumber(System.String)">
            <summary>
            
            </summary>
            
        </member>
        <member name="M:GameSparks.Core.GSData.GetDouble(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetFloat(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetBoolean(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetDate(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetStringList(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetFloatList(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetDoubleList(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetBooleanList(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetIntList(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetLongList(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetObjectList(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSData.GetObject(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSData.BaseData">
            <summary>
            Underlying data dictionary. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSData.JSON">
            <summary>
            Convert this container to a Json string. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.#ctor">
            <summary>
            Create a new request data container which is empty. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.#ctor(System.String)">
            <summary>
            Create a new request data container based on a json string. 
            </summary>
            <param name="jsonString"></param>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Create a new request data container with the given data. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new request with the given data. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.Add(System.String,System.Object)">
            <summary>
            Adds the given paramName-value to this container. Existing paramNames will be overwritten. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddString(System.String,System.String)">
            <summary>
            Add a string value. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddJSONStringAsObject(System.String,System.String)">
            <summary>
            Add a json string which will be converted into an object first. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddDate(System.String,System.DateTime)">
            <summary>
            Add a date. Dates are stored as UTC strings in the following format: yyyy-MM-dd'T'HH:mm'Z' 
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddNumber(System.String,System.Int64)">
            <summary>
            Add a number to the container.  
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddNumberList(System.String,System.Collections.Generic.List{System.Int64})">
            <summary>
            Add a list of numbers to the container.  
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddNumber(System.String,System.Single)">
            <summary>
            Add a number to the container.
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddNumberList(System.String,System.Collections.Generic.List{System.Single})">
            <summary>
            Add a list of numbers to the container.
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddNumber(System.String,System.Double)">
            <summary>
            Add a number to the container.
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddNumberList(System.String,System.Collections.Generic.List{System.Double})">
            <summary>
            Add a list of numbers to the container.
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddNumber(System.String,System.Int32)">
            <summary>
            Add a number to the container.
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddNumberList(System.String,System.Collections.Generic.List{System.Int32})">
            <summary>
            Add a list of numbers to the container.
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddObject(System.String,GameSparks.Core.GSData)">
            <summary>
            Add a child object to the container.
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddObjectList(System.String,System.Collections.Generic.List{GameSparks.Core.GSData})">
            <summary>
            Add a list of child objects to the container.
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddStringList(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Add a list of strings to the container.
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequestData.AddBoolean(System.String,System.Boolean)">
            <summary>
            Add a bool value to the container.
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSObject.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create an instance with the basedata of the given dictionary. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSObject.#ctor(GameSparks.Core.GSData)">
            <summary>
            Create an instance with the basedata of the given wrapper. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSObject.#ctor">
            <summary>
            Create an empty instance without any basedata. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSObject.#ctor(System.String)">
            <summary>
            Create a new instance of the given type ("@class")
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSObject.FromJson(System.String)">
            <summary>
            Parse the given json string into a new GSObject. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSObject.Type">
            <summary>
            Type of this object ("@class")
            </summary>
        </member>
        <member name="T:GameSparks.Core.GSTypedResponse">
            <summary>
            Abstract base class for responses received from the service. 
            </summary>
        </member>
        <member name="F:GameSparks.Core.GSTypedResponse.response">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSTypedResponse.#ctor(GameSparks.Core.GSData)">
            <summary>
            
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSTypedResponse.JSONString">
            <summary>
            Content of this response as a json string. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSTypedResponse.JSONData">
            <summary>
            Content of this response as a json data object. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSTypedResponse.ScriptData">
            <summary>
            Script data content of this response. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSTypedResponse.HasErrors">
            <summary>
            True if there are any errors within this response. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSTypedResponse.Errors">
            <summary>
            Contains the errors in this response. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSTypedResponse.RequestId">
            <summary>
            
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSTypedResponse.BaseData">
            <summary>
            Response data. 
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.GSMessage.CreateMessageFromObject(GameSparks.Core.GSInstance,GameSparks.Core.GSObject)">
            <summary>
            Factory method which creates a strongly typed message from the object data provided. 
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.CustomRequest">
            <summary>
            Base class for autogenerated requests. You should never have to use this class directly. 
            </summary>
        </member>
        <member name="T:GameSparks.Core.GSTypedRequest`2">
            <summary>
            Abstract base class for all requests against the GameSparks backend
            </summary>
            <typeparam name="IN">Request type</typeparam>
            <typeparam name="OUT">Response type</typeparam>
        </member>
        <member name="M:GameSparks.Core.GSTypedRequest`2.#ctor(GameSparks.Core.GSInstance,System.String)">
            <summary>
            Create a new Request of the given type. 
            </summary>
            <param name="instance">The GSInstance this request will be send with</param>
            <param name="type">Request type name</param>
        </member>
        <member name="M:GameSparks.Core.GSTypedRequest`2.SetMaxResponseTimeInMillis(System.Int32)">
            <summary>
            Sets the maximum amount of time GSInstance will wait for a response to this request.
            </summary>
            <param name="maxResponseTime"></param>
            <returns></returns>
        </member>
        <member name="M:GameSparks.Core.GSTypedRequest`2.SetDurable(System.Boolean)">
            <summary>
            If set true this request will be handled as a durable request. The SDK will make sure this gets send even after a shutdown/disconnect/reconnect. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSTypedRequest`2.SetScriptData(GameSparks.Core.GSRequestData)">
            <summary>
            Set the script-data which will be sent to the backend in addition to the data-fields defined by the request itself. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSTypedRequest`2.Send(System.Action{`1})">
            <summary>
            Asyncronous send method, provide an Action to handle the callback.
            It's the callers responsibility to validate whether the response has errors using response.HasErrors
            If the SDK is not connected, the default timeout will be used as defined in GSPlatform.RequestTimeoutSeconds
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSTypedRequest`2.Send(System.Action{`1},System.Int32)">
            <summary>
            Asyncronous send method, provide an Action to handle the callback.
            The timeoutMillis parameter indicates how long the request will be queued for in case the SDK is not connected to the GameSparks service.
            It's the callers responsibility to validate whether the response has errors using response.HasErrors
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSTypedRequest`2.Send(System.Action{`1},System.Action{`1})">
            <summary>
            Asyncronous send method, provide an Action to handle a successful response and an Action to handle an error response.
            If the SDK is not connected, the default timeout will be used as defined in GSPlatform.RequestTimeoutSeconds
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSTypedRequest`2.Send(System.Action{`1},System.Action{`1},System.Int32)">
            <summary>
            Asyncronous send method, provide an Action to handle a successful response and an action to handle an error response.
            The timeoutMillis parameter indicates how long the request will be queued for in case the SDK is not connected to the GameSparks service.
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSTypedRequest`2.JSONString">
            <summary>
            The request as a json string. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GSTypedRequest`2.JSONData">
            <summary>
            Returns the underlying json data of this request. 
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.AchievementName">
            <summary>
            The name of achievement.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.AchievementShortCode">
            <summary>
            The short code of the achievement.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.Currency1Earned">
            <summary>
            The amount of type 1 currency earned.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.Currency2Earned">
            <summary>
            The amount of type 2 currency earned.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.Currency3Earned">
            <summary>
            The amount of type 3 currency earned.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.Currency4Earned">
            <summary>
            The amount of type 4 currency earned.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.Currency5Earned">
            <summary>
            The amount of type 5 currency earned.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.Currency6Earned">
            <summary>
            The amount of type 6 currency earned.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.CurrencyAwards">
            <summary>
            An object containing the short codes and amounts of the currencies credited to the player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.AchievementEarnedMessage.VirtualGoodEarned">
            <summary>
            The name of the virtual good that was earned.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage.Message">
            <summary>
            A player message included in this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage.Who">
            <summary>
            The name of the player whose actions generated this message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeAcceptedMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage.LeaderboardData">
            <summary>
            The leaderboard data associated with this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage.Who">
            <summary>
            Indicates which player has changed the challenge
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeChangedMessage._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeChangedMessage._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChangedMessage._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage.Message">
            <summary>
            A player message included in this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage.Who">
            <summary>
            The name of the player whose actions generated this message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeChatMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeChatMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeChatMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeChatMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeChatMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeChatMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage.Message">
            <summary>
            A player message included in this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage.Who">
            <summary>
            The name of the player whose actions generated this message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDeclinedMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage.LeaderboardData">
            <summary>
            The leaderboard data associated with this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeDrawnMessage._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeDrawnMessage._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeDrawnMessage._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeExpiredMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage.Message">
            <summary>
            A player message included in this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage.Who">
            <summary>
            The name of the player whose actions generated this message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeIssuedMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage.Message">
            <summary>
            A player message included in this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage.Who">
            <summary>
            The name of the player whose actions generated this message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeJoinedMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLapsedMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage.LeaderboardData">
            <summary>
            The leaderboard data associated with this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage.WinnerName">
            <summary>
            The winning players name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeLostMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeLostMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeLostMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeLostMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeLostMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeLostMessage._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeLostMessage._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeLostMessage._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeStartedMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage.Who">
            <summary>
            The name of the player whoe has taken their turn.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeTurnTakenMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWaitingMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage.Message">
            <summary>
            A player message included in this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage.Who">
            <summary>
            The name of the player whose actions generated this message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWithdrawnMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.Challenge">
            <summary>
            An object representing the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.Currency1Won">
            <summary>
            The amount of type 1 currency the player has won.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.Currency2Won">
            <summary>
            The amount of type 2 currency the player has won.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.Currency3Won">
            <summary>
            The amount of type 3 currency the player has won.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.Currency4Won">
            <summary>
            The amount of type 4 currency the player has won.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.Currency5Won">
            <summary>
            The amount of type 5 currency the player has won.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.Currency6Won">
            <summary>
            The amount of type 6 currency the player has won.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.CurrencyWinnings">
            <summary>
            An object containing the short codes and amounts of the currencies the player has won
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.LeaderboardData">
            <summary>
            The leaderboard data associated with this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage.WinnerName">
            <summary>
            The winning player's name.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeWonMessage._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeWonMessage._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeWonMessage._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeWonMessage._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeWonMessage._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.ChallengeWonMessage._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.ChallengeWonMessage._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ChallengeWonMessage._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.FriendMessage.FromId">
            <summary>
            The player's id who is sending the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.FriendMessage.Message">
            <summary>
            The player's message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.FriendMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.FriendMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.FriendMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.FriendMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.FriendMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.FriendMessage.Who">
            <summary>
            The name of the player who is sending the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage.GameId">
            <summary>
            The game id that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage.LeaderboardName">
            <summary>
            The leaderboard's name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage.LeaderboardShortCode">
            <summary>
            The leaderboard shortcode.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage.Them">
            <summary>
            The score details of the player whose score the receiving player has passed.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage.You">
            <summary>
            The score details of the receiving player.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.GlobalRankChangedMessage._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.GlobalRankChangedMessage._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.GlobalRankChangedMessage._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.AccessToken">
            <summary>
            The accessToken used to authenticate this player for this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.Host">
            <summary>
            The host to connect to for this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.MatchData">
            <summary>
            MatchData is arbitrary data that can be stored in a Match instance by a Cloud Code script.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.MatchGroup">
            <summary>
            The group the player was assigned in the matchmaking request
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.MatchId">
            <summary>
            The id for this match instance
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.MatchShortCode">
            <summary>
            The shortCode of the match type this message for
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.Participants">
            <summary>
            The participants in this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.Port">
            <summary>
            The port to connect to for this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.MatchFoundMessage._Participant">
            <summary>
            A nested object that represents a participant in a match.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.MatchFoundMessage._Participant.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage._Participant.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage._Participant.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage._Participant.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage._Participant.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage._Participant.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage._Participant.ParticipantData">
            <summary>
            A JSON Map of any data that was associated to this user
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage._Participant.PeerId">
            <summary>
            The peerId of this participant within the match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchFoundMessage._Participant.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage.MatchData">
            <summary>
            MatchData is arbitrary data that can be stored in a Match instance by a Cloud Code script.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage.MatchGroup">
            <summary>
            The group the player was assigned in the matchmaking request
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage.MatchShortCode">
            <summary>
            The shortCode of the match type this message for
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage.ParticipantData">
            <summary>
            A JSON Map of any data that was associated to this user
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage.Participants">
            <summary>
            The participants in this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.MatchNotFoundMessage._Participant">
            <summary>
            A nested object that represents a participant in a match.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.MatchNotFoundMessage._Participant.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage._Participant.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage._Participant.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage._Participant.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage._Participant.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage._Participant.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage._Participant.ParticipantData">
            <summary>
            A JSON Map of any data that was associated to this user
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage._Participant.PeerId">
            <summary>
            The peerId of this participant within the match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchNotFoundMessage._Participant.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.AddedPlayers">
            <summary>
            The players that joined this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.MatchData">
            <summary>
            MatchData is arbitrary data that can be stored in a Match instance by a Cloud Code script.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.MatchGroup">
            <summary>
            The group the player was assigned in the matchmaking request
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.MatchId">
            <summary>
            The id for this match instance
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.MatchShortCode">
            <summary>
            The shortCode of the match type this message for
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.Participants">
            <summary>
            The participants in this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.RemovedPlayers">
            <summary>
            The players that left this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.MatchUpdatedMessage._Participant">
            <summary>
            A nested object that represents a participant in a match.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.MatchUpdatedMessage._Participant.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage._Participant.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage._Participant.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage._Participant.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage._Participant.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage._Participant.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage._Participant.ParticipantData">
            <summary>
            A JSON Map of any data that was associated to this user
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage._Participant.PeerId">
            <summary>
            The peerId of this participant within the match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.MatchUpdatedMessage._Participant.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage.LeaderboardData">
            <summary>
            The new leaderboard data associated with this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage.LeaderboardName">
            <summary>
            The leaderboard's name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage.LeaderboardShortCode">
            <summary>
            The leaderboard shortcode.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage.RankDetails">
            <summary>
            The ranking information for the new score.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails">
            <summary>
            Ranking information.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.FriendsPassed">
            <summary>
            The leaderboard entries of the players friends that were beaten as part of this score submission.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.GlobalCount">
            <summary>
            The number of entries in this leaderboard.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.GlobalFrom">
            <summary>
            The Global Rank of the player in this leaderboard before the score was submitted.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.GlobalFromPercent">
            <summary>
            The old global rank of the player as a percentage of the total number of scores in this leaderboard .
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.GlobalTo">
            <summary>
            The Global Rank of the player in this leaderboard after the score was submitted.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.GlobalToPercent">
            <summary>
            The new global rank of the player as a percentage of the total number of scores in this leaderboard .
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.SocialCount">
            <summary>
            The number of friend entries the player has in this leaderboard.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.SocialFrom">
            <summary>
            The Social Rank of the player in this leaderboard before the score was submitted.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.SocialFromPercent">
            <summary>
            The old social rank of the player as a percentage of the total number of friend scores in this leaderboard.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.SocialTo">
            <summary>
            The Social Rank of the player in this leaderboard after the score was submitted.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.SocialToPercent">
            <summary>
            The old global rank of the player as a percentage of the total number of friend scores in this leaderboard.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails.TopNPassed">
            <summary>
            The leaderboard entries of the global players that were beaten as part of this score submission. Requires Top N to be configured on the leaderboard
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardRankDetails._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewHighScoreMessage._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage.LeaderboardData">
            <summary>
            The new leaderboard data associated with this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage.LeaderboardName">
            <summary>
            The leaderboard's name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage.LeaderboardShortCode">
            <summary>
            The leaderboard shortcode.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage.RankDetails">
            <summary>
            The ranking information for the new score.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails">
            <summary>
            Ranking information.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.FriendsPassed">
            <summary>
            The leaderboard entries of the players friends that were beaten as part of this score submission.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.GlobalCount">
            <summary>
            The number of entries in this leaderboard.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.GlobalFrom">
            <summary>
            The Global Rank of the player in this leaderboard before the score was submitted.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.GlobalFromPercent">
            <summary>
            The old global rank of the player as a percentage of the total number of scores in this leaderboard .
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.GlobalTo">
            <summary>
            The Global Rank of the player in this leaderboard after the score was submitted.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.GlobalToPercent">
            <summary>
            The new global rank of the player as a percentage of the total number of scores in this leaderboard .
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.SocialCount">
            <summary>
            The number of friend entries the player has in this leaderboard.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.SocialFrom">
            <summary>
            The Social Rank of the player in this leaderboard before the score was submitted.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.SocialFromPercent">
            <summary>
            The old social rank of the player as a percentage of the total number of friend scores in this leaderboard.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.SocialTo">
            <summary>
            The Social Rank of the player in this leaderboard after the score was submitted.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.SocialToPercent">
            <summary>
            The old global rank of the player as a percentage of the total number of friend scores in this leaderboard.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails.TopNPassed">
            <summary>
            The leaderboard entries of the global players that were beaten as part of this score submission. Requires Top N to be configured on the leaderboard
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardRankDetails._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.NewTeamScoreMessage._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ScriptMessage.Data">
            <summary>
            JSON data sent from a Cloud Code script.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ScriptMessage.ExtCode">
            <summary>
            The extension code used when creating this script message
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ScriptMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ScriptMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ScriptMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ScriptMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.ScriptMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SessionTerminatedMessage.AuthToken">
            <summary>
            Used to automatically re-authenticate a client during socket connect.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage.GameId">
            <summary>
            The game id that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage.LeaderboardName">
            <summary>
            The leaderboard's name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage.LeaderboardShortCode">
            <summary>
            The leaderboard shortcode.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage.Them">
            <summary>
            The score details of the player whose score the receiving player has passed.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage.You">
            <summary>
            The score details of the receiving player.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.SocialRankChangedMessage._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.SocialRankChangedMessage._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.SocialRankChangedMessage._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.ChatMessageId">
            <summary>
            The identifier for this message as it appears in the chat history.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.FromId">
            <summary>
            The player's id who is sending the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.Message">
            <summary>
            The message to send to the team.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.OwnerId">
            <summary>
            The id of the owner
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.TeamId">
            <summary>
            The id of the team
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.TeamType">
            <summary>
            The team type
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamChatMessage.Who">
            <summary>
            The name of the player who is sending the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage.GameId">
            <summary>
            The game id that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage.LeaderboardName">
            <summary>
            The leaderboard's name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage.LeaderboardShortCode">
            <summary>
            The leaderboard shortcode.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage.Them">
            <summary>
            The score details of the team whose score the receiving team's players have passed.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage.You">
            <summary>
            The score details of the receiving team.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.TeamRankChangedMessage._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.TeamRankChangedMessage._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.TeamRankChangedMessage._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.UploadCompleteMessage.MessageId">
            <summary>
            A unique identifier for this message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.UploadCompleteMessage.Notification">
            <summary>
            Flag indicating whether this message could be sent as a push notification or not.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.UploadCompleteMessage.SubTitle">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.UploadCompleteMessage.Summary">
            <summary>
            A textual summary describing the message's purpose.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.UploadCompleteMessage.Title">
            <summary>
            A textual title for the message.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.UploadCompleteMessage.UploadData">
            <summary>
            The upload data (if supplied as part of GetUploadUrlRequest) of UploadData objects
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.UploadCompleteMessage.UploadId">
            <summary>
            The id of the upload
            </summary>
        </member>
        <member name="T:GameSparks.Api.Messages.UploadCompleteMessage._UploadData">
            <summary>
            This object represents the result of uploading a file to the GameSparks platform.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Messages.UploadCompleteMessage._UploadData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.UploadCompleteMessage._UploadData.FileName">
            <summary>
            The filename of the file that was uploaded.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Messages.UploadCompleteMessage._UploadData.PlayerId">
            <summary>
            The unique player id of the player that uploaded the file.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.AcceptChallengeRequest">
            <summary>
            Accepts a challenge that has been issued to the current player.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AcceptChallengeRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AcceptChallengeRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AcceptChallengeRequest.SetChallengeInstanceId(System.String)">
            <summary>
            The ID of the challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AcceptChallengeRequest.SetMessage(System.String)">
            <summary>
            An optional message to send with the challenge
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.AccountDetailsRequest">
            <summary>
            Retrieves the details of the current authenticated player.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AccountDetailsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AccountDetailsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.AmazonBuyGoodsRequest">
            <summary>
            Processes the receipt from an Amazon in app purchase.}
            The GameSparks platform will validate the amazonUserId and receiptId with Amazon using the Amazon Purchase Secret configured against the game.}
            The receiptId in the data will be recorded and the request will be rejected if the receiptId has previously been processed, this prevents replay attacks.}
            Once verfied, the players account will be credited with the Virtual Good, or Virtual Currency the purchase contains. The virtual good will be looked up by matching the productId in the receipt with the 'Amazon Product Id' configured against the virtual good.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonBuyGoodsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonBuyGoodsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonBuyGoodsRequest.SetAmazonUserId(System.String)">
            <summary>
            The userId obtained from the UserData within a PurchaseResponse
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonBuyGoodsRequest.SetCurrencyCode(System.String)">
            <summary>
            The ISO 4217 currency code representing the real-world currency used for this transaction.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonBuyGoodsRequest.SetReceiptId(System.String)">
            <summary>
            The receiptId obtained from the Receipt within a PurchaseResponse
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonBuyGoodsRequest.SetSubUnitPrice(System.Double)">
            <summary>
            The price of this purchase
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonBuyGoodsRequest.SetUniqueTransactionByPlayer(System.Boolean)">
            <summary>
            If set to true, the transactionId from this receipt will not be globally valdidated, this will mean replays between players are possible.
            It will only validate the transactionId has not been used by this player before.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.AmazonConnectRequest">
            <summary>
            Allows an Amazon access token to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the Amazon platform and store them within GameSparks.}
            If the Amazon user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Amazon user is not already registered with the game, the Amazon user will be linked to the current player.}
            If the current player has not authenticated and the Amazon user is not known, a new player will be created using the Amazon details and the session will be authenticated against the new player.}
            If the Amazon user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonConnectRequest.SetAccessToken(System.String)">
            <summary>
            The access token is used by the client to make authenticated requests on behalf of the end user.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AmazonConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.AnalyticsRequest">
            <summary>
            Records some custom analytical data.}
            Simple analytics, where you just need to track the number of times something happened, just take a key parameter. We'll record the players id against the data to allow you to report on averages per user}
            Timed analytics allow you to send start and end timer requests, and with this data GameSparks can track the length of time something takes.}
            If an end request is sent without a matching start timer the request will fail silently and your analytics data might not contain what you expect.}
            If both start and end are supplied, the request will be treated as a start timer.}
            An additional data payload can be attached to the event for advanced reporting. This data can be a string, number or JSON object.}
            If a second start timer is created using a key that has already had a start timer created without an end, the previous one will be marked as abandoned.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AnalyticsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AnalyticsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AnalyticsRequest.SetData(GameSparks.Core.GSRequestData)">
            <summary>
            Custom data payload
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AnalyticsRequest.SetEnd(System.Boolean)">
            <summary>
            Use the value true to indicate it's an end timer
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AnalyticsRequest.SetKey(System.String)">
            <summary>
            The key you want to track this analysis with.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AnalyticsRequest.SetStart(System.Boolean)">
            <summary>
            Use the value true to indicate it's a start timer
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.AroundMeLeaderboardRequest">
            <summary>
            Returns leaderboard data that is adjacent to the currently signed in player's position within the given leaderboard.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetChallengeInstanceId(System.String)">
            <summary>
            The challenge instance to get the leaderboard data for
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetCustomIdFilter(GameSparks.Core.GSRequestData)">
            <summary>
            An optional filter on the customIds.
            If this request does not contain a custonIdFilter or if it is a partial filter, 
            the leaderboard entries around the highest score for the given constraints will be returned.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetDontErrorOnNotSocial(System.Boolean)">
            <summary>
            The default behaviour on a social request is to error if the player has no friends (NOTSOCIAL).  Set this flag to suppress that error and return the player's leaderboard entry instead.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetEntryCount(System.Int64)">
            <summary>
            The number of items to return in a page (default=50)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetFriendIds(System.Collections.Generic.List{System.String})">
            <summary>
            A friend id or an array of friend ids to use instead of the player's social friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetIncludeFirst(System.Int64)">
            <summary>
            Number of entries to include from head of the list
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetIncludeLast(System.Int64)">
            <summary>
            Number of entries to include from tail of the list
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetInverseSocial(System.Boolean)">
            <summary>
            Returns the leaderboard excluding the player's social friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetLeaderboardShortCode(System.String)">
            <summary>
            The short code of the leaderboard
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetSocial(System.Boolean)">
            <summary>
            If True returns a leaderboard of the player's social friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetTeamIds(System.Collections.Generic.List{System.String})">
            <summary>
            The IDs of the teams you are interested in
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AroundMeLeaderboardRequest.SetTeamTypes(System.Collections.Generic.List{System.String})">
            <summary>
            The type of team you are interested in
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.AuthenticationRequest">
            <summary>
            Provides authentication using a username/password combination.}
            The username will have been previously created using a RegistrationRequest.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AuthenticationRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AuthenticationRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AuthenticationRequest.SetPassword(System.String)">
            <summary>
            The previously registered password
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.AuthenticationRequest.SetUserName(System.String)">
            <summary>
            The previously registered player name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.BatchAdminRequest">
            <summary>
            Performs a request for multiple players.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.BatchAdminRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.BatchAdminRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.BatchAdminRequest.SetPlayerIds(System.Collections.Generic.List{System.String})">
            <summary>
            The players to run the request for.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.BatchAdminRequest.SetRequest(GameSparks.Core.GSRequestData)">
            <summary>
            The request to be run for each player.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.BuyVirtualGoodsRequest">
            <summary>
            Purchases a virtual good with an in game currency. Once purchased the virtual good will be added to the players account.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.BuyVirtualGoodsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.BuyVirtualGoodsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.BuyVirtualGoodsRequest.SetCurrencyShortCode(System.String)">
            <summary>
            The short code of the currency to use
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.BuyVirtualGoodsRequest.SetCurrencyType(System.Int64)">
            <summary>
            Which virtual currency to use. (1 to 6)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.BuyVirtualGoodsRequest.SetQuantity(System.Int64)">
            <summary>
            The number of items to purchase
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.BuyVirtualGoodsRequest.SetShortCode(System.String)">
            <summary>
            The short code of the virtual good to be purchased
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.CancelBulkJobAdminRequest">
            <summary>
            Cancel one or more bulk jobs.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CancelBulkJobAdminRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CancelBulkJobAdminRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CancelBulkJobAdminRequest.SetBulkJobIds(System.Collections.Generic.List{System.String})">
            <summary>
            The IDs of existing bulk jobs to cancel
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ChangeUserDetailsRequest">
            <summary>
            Change the details of the currently signed in Player.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ChangeUserDetailsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ChangeUserDetailsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ChangeUserDetailsRequest.SetDisplayName(System.String)">
            <summary>
            The new display name to set in the player data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ChangeUserDetailsRequest.SetLanguage(System.String)">
            <summary>
            The new language code to set in the player data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ChangeUserDetailsRequest.SetNewPassword(System.String)">
            <summary>
            The new password to set in the player data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ChangeUserDetailsRequest.SetOldPassword(System.String)">
            <summary>
            The player's existing password. If supplied it will be checked against the password stored in the player data. This allows you re-authenticate the player making the change.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ChangeUserDetailsRequest.SetUserName(System.String)">
            <summary>
            The new userName with which this player will sign in.  If the player currently authenticates using device authentication this will upgrade their account and require them to use username and password authentication from now on.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ChatOnChallengeRequest">
            <summary>
            Sends a message to all players involved in the challenge. The current player must be involved in the challenge for the message to be sent.}
            As the message is sent to all players, the current player will also see details of the message in the response. Read the section on response message aggregation for a description of this.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ChatOnChallengeRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ChatOnChallengeRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ChatOnChallengeRequest.SetChallengeInstanceId(System.String)">
            <summary>
            The ID of the challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ChatOnChallengeRequest.SetMessage(System.String)">
            <summary>
            An optional message to send with the challenge
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ConsumeVirtualGoodRequest">
            <summary>
            Consumes a given amount of the specified virtual good.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ConsumeVirtualGoodRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ConsumeVirtualGoodRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ConsumeVirtualGoodRequest.SetQuantity(System.Int64)">
            <summary>
            The amount of virtual goods to be consumed
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ConsumeVirtualGoodRequest.SetShortCode(System.String)">
            <summary>
            The short code of the virtual good to be consumed
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.CreateChallengeRequest">
            <summary>
            Issues a challenge to a group of players from the currently signed in player.}
            The endTime field must be present unless the challenge template has an achievement set in the 'First to Achievement' field.}
            The usersToChallenge field must be present for this request if the acessType is PRIVATE (which is the default).}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetAccessType(System.String)">
            <summary>
            Who can join this challenge. Either PUBLIC, PRIVATE or FRIENDS
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetAutoStartJoinedChallengeOnMaxPlayers(System.Boolean)">
            <summary>
            Whether this challenge should automatically start when a new player joins and maxPlayers is reached
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetChallengeMessage(System.String)">
            <summary>
            An optional message to include with the challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetChallengeShortCode(System.String)">
            <summary>
            The short code of the challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetCurrency1Wager(System.Int64)">
            <summary>
            The ammount of currency type 1 that the player is wagering on this challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetCurrency2Wager(System.Int64)">
            <summary>
            The amount of currency type 2 that the player is wagering on this challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetCurrency3Wager(System.Int64)">
            <summary>
            The amount of currency type 3 that the player is wagering on this challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetCurrency4Wager(System.Int64)">
            <summary>
            The amount of currency type 4 that the player is wagering on this challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetCurrency5Wager(System.Int64)">
            <summary>
            The amount of currency type 5 that the player is wagering on this challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetCurrency6Wager(System.Int64)">
            <summary>
            The amount of currency type 6 that the player is wagering on this challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetCurrencyWagers(GameSparks.Core.GSRequestData)">
            <summary>
            A JSON object containing the amounts of named currencies that the player is wagering on this challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetEligibilityCriteria(GameSparks.Core.GSRequestData)">
            <summary>
            Criteria for who can and cannot find and join this challenge (when the accessType is PUBLIC or FRIENDS).
            Currently supports a field <i>segments</i> that contains segment type against single (where that segment value is required) or multiple (where one of the specified values is required) segment values.
            For each segment type a player must have one of the specified values in order to be considered eligible.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetEndTime(System.DateTime)">
            <summary>
            The time at which this challenge will end
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetExpiryTime(System.DateTime)">
            <summary>
            The latest time that players can join this challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetMaxAttempts(System.Int64)">
            <summary>
            The maximum number of attempts 
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetMaxPlayers(System.Int64)">
            <summary>
            The maximum number of players that are allowed to join this challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetMinPlayers(System.Int64)">
            <summary>
            The minimum number of players that are allowed to join this challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetSilent(System.Boolean)">
            <summary>
            If True  no messaging is triggered
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetStartTime(System.DateTime)">
            <summary>
            The time at which this challenge will begin
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateChallengeRequest.SetUsersToChallenge(System.Collections.Generic.List{System.String})">
            <summary>
            A player id or an array of player ids who will recieve this challenge
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.CreateTeamRequest">
            <summary>
            Allows a new team to be created.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateTeamRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateTeamRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateTeamRequest.SetTeamId(System.String)">
            <summary>
            An optional teamId to use
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateTeamRequest.SetTeamName(System.String)">
            <summary>
            A display name to use
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.CreateTeamRequest.SetTeamType(System.String)">
            <summary>
            The type of team to be created
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.DeclineChallengeRequest">
            <summary>
            Declines a challenge that has been issued to the current player.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DeclineChallengeRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DeclineChallengeRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DeclineChallengeRequest.SetChallengeInstanceId(System.String)">
            <summary>
            The ID of the challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DeclineChallengeRequest.SetMessage(System.String)">
            <summary>
            An optional message to send with the challenge
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.DeviceAuthenticationRequest">
            <summary>
            Allows a device id to be used to create an anonymous profile in the game.}
            This allows the player to be tracked and have data stored against them before using FacebookConnectRequest to create a full profile.}
            DeviceAuthenticationRequest should not be used in conjunction with RegistrationRequest as the two accounts will not be merged.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DeviceAuthenticationRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DeviceAuthenticationRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DeviceAuthenticationRequest.SetDisplayName(System.String)">
            <summary>
            An optional displayname for the player
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DeviceAuthenticationRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request reates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.DismissMessageRequest">
            <summary>
            Allows a message to be dismissed. Once dismissed the message will no longer appear in either ListMessageResponse or ListMessageSummaryResponse.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DismissMessageRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DismissMessageRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DismissMessageRequest.SetMessageId(System.String)">
            <summary>
            The messageId of the message to dismiss
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.DismissMultipleMessagesRequest">
            <summary>
            Allows multiple messages to be dismissed. Once dismissed the messages will no longer appear in either ListMessageResponse or ListMessageSummaryResponse.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DismissMultipleMessagesRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DismissMultipleMessagesRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DismissMultipleMessagesRequest.SetMessageIds(System.Collections.Generic.List{System.String})">
            <summary>
            The list of the messageIds to dismiss
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.DropTeamRequest">
            <summary>
            Allows a player to drop a team.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DropTeamRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DropTeamRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DropTeamRequest.SetOwnerId(System.String)">
            <summary>
            The team owner to find, used in combination with teamType. If not supplied the current players id will be used
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DropTeamRequest.SetTeamId(System.String)">
            <summary>
            The teamId to find (may be null if teamType supplied)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.DropTeamRequest.SetTeamType(System.String)">
            <summary>
            The teamType to find, used in combination with the current player, or the player defined by ownerId
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.EndSessionRequest">
            <summary>
            Records the end of the current player's active session.}
            The SDK will automatically create a new session ID when the application is started, this method can be useful to call when the app goes into the background to allow reporting on player session length.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.EndSessionRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.EndSessionRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.FacebookConnectRequest">
            <summary>
            Allows either a Facebook access token, or a Facebook authorization code to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the Facebook platform and store them within GameSparks.}
            GameSparks will determine the player's friends and whether any of them are currently registered with the game.}
            If the Facebook user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthenticationRequest or RegistrationRequest AND the Facebook user is not already registered with the game, the Facebook user will be linked to the current player.}
            If the current player has not authenticated and the Facebook user is not known, a new player will be created using the Facebook details and the session will be authenticated against the new player.}
            If the Facebook user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FacebookConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FacebookConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FacebookConnectRequest.SetAccessToken(System.String)">
            <summary>
            The access token is used by the client to make authenticated requests on behalf of the end user.
            It has a longer lifetime than the authorization code, typically on the order of minutes or hours.
            When the access token expires, attempts to use it will fail, and a new access token must be obtained via a refresh token.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FacebookConnectRequest.SetCode(System.String)">
            <summary>
            An authorization code is a short-lived token representing the user's access grant, created by the authorization server and passed to the client application via the browser.
            The client application sends the authorization code to the authorization server to obtain an access token and, optionally, a refresh token.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FacebookConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FacebookConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FacebookConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FacebookConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FacebookConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.FindChallengeRequest">
            <summary>
            Allows a player to find challenges that they are eligible to join.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindChallengeRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindChallengeRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindChallengeRequest.SetAccessType(System.String)">
            <summary>
            The type of challenge to find, either PUBLIC or FRIENDS.  Defaults to FRIENDS
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindChallengeRequest.SetCount(System.Int64)">
            <summary>
            The number of challenges to return (MAX=50)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindChallengeRequest.SetEligibility(GameSparks.Core.GSRequestData)">
            <summary>
            Optional.  Allows the current player's eligibility to be overridden by what is provided here.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindChallengeRequest.SetOffset(System.Int64)">
            <summary>
            The offset to start from when returning challenges (used for paging)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindChallengeRequest.SetShortCode(System.Collections.Generic.List{System.String})">
            <summary>
            Optional shortCodes to filter the results by challenge type
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.FindMatchRequest">
            <summary>
            @Deprecated. Use MatchmakingRequest instead.}
            Find a match for this player, using the given skill and matchShortCode.}
            Players looking for a match using the same matchShortCode will be considered for a match, based on the matchConfig.}
            Each player must match the other for the match to be found.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindMatchRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindMatchRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindMatchRequest.SetAction(System.String)">
            <summary>
            The action to take on the already in-flight request for this match. Currently supported actions are: 'cancel'
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindMatchRequest.SetMatchGroup(System.String)">
            <summary>
            Optional. Players will be grouped based on the distinct value passed in here, only players in the same group can be matched together
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindMatchRequest.SetMatchShortCode(System.String)">
            <summary>
            The shortCode of the match type this player is registering for
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindMatchRequest.SetSkill(System.Int64)">
            <summary>
            The skill of the player looking for a match
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.FindPendingMatchesRequest">
            <summary>
            Find other pending matches that will match this player's previously submitted MatchmakingRequest.}
            Used for manual matching of players, where you want control over which pending match should be chosen.}
            Each player must match the other for the pending match to be found.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindPendingMatchesRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindPendingMatchesRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindPendingMatchesRequest.SetMatchGroup(System.String)">
            <summary>
            Optional. The matchGroup of the match this player previously registeredfor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindPendingMatchesRequest.SetMatchShortCode(System.String)">
            <summary>
            The shortCode of the match this player previously registered for
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.FindPendingMatchesRequest.SetMaxMatchesToFind(System.Int64)">
            <summary>
            Optional. The maximum number of pending matches to return (default=10)
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GameCenterConnectRequest">
            <summary>
            Allows an Apple account that has GameCenter to be used as an authentication mechanism.}
            The request must supply the GameCenter user details, such as the player id and username.}
            If the GameCenter user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the GameCenter user is not already registered with the game, the GameCenter user will be linked to the current player.}
            If the current player has not authenticated and the GameCenter user is not known, a new player will be created using the GameCenter details and the session will be authenticated against the new player.}
            If the GameCenter user is already known, the session will switch to being the previously created user.}
            This API call requires the output details from GKLocalPlayer.generateIdentityVerificationSignatureWithCompletionHandler on your iOS device}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.SetDisplayName(System.String)">
            <summary>
            The display of the current player from GameCenter. This will be used as the displayName of the gamesparks player if created (or syncDisplayname is true)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.SetExternalPlayerId(System.String)">
            <summary>
            The game center id of the current player. This value obtained be obtained from GKLocalPlayer playerID
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.SetPublicKeyUrl(System.String)">
            <summary>
            The url from where we will download the public key. This value should be obtained from generateIdentityVerificationSignatureWithCompletionHandler. 
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.SetSalt(System.String)">
            <summary>
            The salt is needed in order to prevent request forgery. This value should be obtained from generateIdentityVerificationSignatureWithCompletionHandler and should be base64 encoded using [salt base64Encoding]
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.SetSignature(System.String)">
            <summary>
            The signature is needed to validate that the request is genuine and that we can save the player. This value should be obtained from generateIdentityVerificationSignatureWithCompletionHandler and should be base64 encoded using [signature base64Encoding]
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GameCenterConnectRequest.SetTimestamp(System.Int64)">
            <summary>
            The timestamp is needed to validate the request signature. This value should be obtained from generateIdentityVerificationSignatureWithCompletionHandler
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GetChallengeRequest">
            <summary>
            Gets the details of a challenge. The current player must be involved in the challenge for the request to succeed.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetChallengeRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetChallengeRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetChallengeRequest.SetChallengeInstanceId(System.String)">
            <summary>
            The ID of the challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetChallengeRequest.SetMessage(System.String)">
            <summary>
            An optional message to send with the challenge
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GetDownloadableRequest">
            <summary>
            Returns a secure, time sensitive url to allow the game to download a piece of downloadable content stored in the GameSparks platform.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetDownloadableRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetDownloadableRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetDownloadableRequest.SetShortCode(System.String)">
            <summary>
            The short code of the Downloadable item
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GetLeaderboardEntriesRequest">
            <summary>
            Get the leaderboard entry data for the current player or a given player. }
            For each leaderboard it returns the hichest score the player has}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetLeaderboardEntriesRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetLeaderboardEntriesRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetLeaderboardEntriesRequest.SetChallenges(System.Collections.Generic.List{System.String})">
            <summary>
            The challenge leaderboards to return entries for
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetLeaderboardEntriesRequest.SetInverseSocial(System.Boolean)">
            <summary>
            Returns the leaderboard excluding the player's social friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetLeaderboardEntriesRequest.SetLeaderboards(System.Collections.Generic.List{System.String})">
            <summary>
            The list of leaderboards shortcodes
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetLeaderboardEntriesRequest.SetPlayer(System.String)">
            <summary>
            The player id. Leave out to use the current player id
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetLeaderboardEntriesRequest.SetSocial(System.Boolean)">
            <summary>
            Set to true to include the player's game friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetLeaderboardEntriesRequest.SetTeamTypes(System.Collections.Generic.List{System.String})">
            <summary>
            The types of team to apply this request to
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GetMessageRequest">
            <summary>
            Returns the full details of a message.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetMessageRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetMessageRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetMessageRequest.SetMessageId(System.String)">
            <summary>
            The messageId of the message retreive
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GetMyTeamsRequest">
            <summary>
            Get the teams that the player is in. Can be filtered on team type and also on those teams that the player owns.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetMyTeamsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetMyTeamsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetMyTeamsRequest.SetOwnedOnly(System.Boolean)">
            <summary>
            Set to true to only get teams owned by the player
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetMyTeamsRequest.SetTeamTypes(System.Collections.Generic.List{System.String})">
            <summary>
            The type of teams to get
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GetPropertyRequest">
            <summary>
            Get the property for the given short Code.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetPropertyRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetPropertyRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetPropertyRequest.SetPropertyShortCode(System.String)">
            <summary>
            The shortCode of the property to return.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GetPropertySetRequest">
            <summary>
            Get the property set for the given short Code.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetPropertySetRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetPropertySetRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetPropertySetRequest.SetPropertySetShortCode(System.String)">
            <summary>
            The shortCode of the property set to return.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GetTeamRequest">
            <summary>
            Allows the details of a team to be retrieved.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetTeamRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetTeamRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetTeamRequest.SetOwnerId(System.String)">
            <summary>
            The team owner to find, used in combination with teamType. If not supplied the current players id will be used
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetTeamRequest.SetTeamId(System.String)">
            <summary>
            The teamId to find (may be null if teamType supplied)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetTeamRequest.SetTeamType(System.String)">
            <summary>
            The teamType to find, used in combination with the current player, or the player defined by ownerId
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GetUploadUrlRequest">
            <summary>
            Returns a secure, time sensitive URL to allow the game to upload a piece of player content to the GameSparks platform.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetUploadUrlRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetUploadUrlRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetUploadUrlRequest.SetUploadData(GameSparks.Core.GSRequestData)">
            <summary>
            Optional meta data which is stored against the player's uploaded content
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GetUploadedRequest">
            <summary>
            Returns a secure, time sensitive URL to a piece of content that was previously uploaded to the GameSparks platform by a player.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetUploadedRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetUploadedRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GetUploadedRequest.SetUploadId(System.String)">
            <summary>
            The system generated id of the uploaded item
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GooglePlayBuyGoodsRequest">
            <summary>
            Processes the response from a Google Play in app purchase flow.}
            The GameSparks platform will validate the signature and signed data with the Google Play Public Key configured against the game.}
            The orderId in the data will be recorded and the request will be rejected if the orderId has previously been processed, this prevents replay attacks.}
            Once verfied, the players account will be credited with the Virtual Good, or Virtual Currency the purchase contains. The virtual good will be looked up by matching the productId in the signed data with the 'Google Product ID' configured against the virtual good.}
            It is critical that the signedData is sent exactly as it is returned form google, including any whitespace. Any modification of the signedData will cause the verification process to fail.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayBuyGoodsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayBuyGoodsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayBuyGoodsRequest.SetCurrencyCode(System.String)">
            <summary>
            The ISO 4217 currency code representing the real-world currency used for this transaction.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayBuyGoodsRequest.SetSignature(System.String)">
            <summary>
            The value obtained from data.getStringExtra("INAPP_DATA_SIGNATURE");
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayBuyGoodsRequest.SetSignedData(System.String)">
            <summary>
            The value obtained from data.getStringExtra("INAPP_PURCHASE_DATA")
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayBuyGoodsRequest.SetSubUnitPrice(System.Double)">
            <summary>
            The price of this purchase
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayBuyGoodsRequest.SetUniqueTransactionByPlayer(System.Boolean)">
            <summary>
            If set to true, the transactionId from this receipt will not be globally valdidated, this will mean replays between players are possible.
            It will only validate the transactionId has not been used by this player before.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GooglePlayConnectRequest">
            <summary>
            Allows either a Google Play access code or an access token to be used as an authentication mechanism.}
            The access code needs to have at least the https://www.googleapis.com/auth/games scope.}
            For more details about Google OAuth 2.0 scopes refer to this: https://developers.google.com/identity/protocols/googlescopes#gamesConfigurationv1configuration}
            If the Google Play user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Google Play user is not already registered with the game, the Google Play user will be linked to the current player.}
            If the current player has not authenticated and the Google Play user is not known, a new player will be created using the Google Play details and the session will be authenticated against the new player.}
            If the Google Play user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.SetAccessToken(System.String)">
            <summary>
            The access token is used when using the service id and certificate.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.SetCode(System.String)">
            <summary>
            The access code is used by the client to make authenticated requests on behalf of the end user. Requires clientId and clientsecret to be set
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.SetDisplayName(System.String)">
            <summary>
            The display of the current player from Google Play. This will be used as the displayName of the gamesparks player if created (or syncDisplayname is true)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.SetGooglePlusScope(System.Boolean)">
            <summary>
            Did you request the plus.login scope when you got the access code or authorisation token from Google? If this is true, we will fetch the user's google+ account and friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.SetProfileScope(System.Boolean)">
            <summary>
            Did you request the profile scope when you got the access code or authorisation token from Google? If this is true, we will fetch the user info by calling https://www.googleapis.com/oauth2/v1/userinfo?alt=json 
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.SetRedirectUri(System.String)">
            <summary>
            Only required when the access code has been granted using an explicit redirectUri, for example when using the mechanism described in https://developers.google.com/+/web/signin/server-side-flow
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlayConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.GooglePlusConnectRequest">
            <summary>
            Allows either a Google Plus access code or an authentication token to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the Google Plus platform and store them within GameSparks.}
            GameSparks will determine the player's friends and whether any of them are currently registered with the game.}
            If the Google Plus user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Google Plus user is not already registered with the game, the Google Plus user will be linked to the current player.}
            If the current player has not authenticated and the Google Plus user is not known, a new player will be created using the Google Plus details and the session will be authenticated against the new player.}
            If the Google Plus user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlusConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlusConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlusConnectRequest.SetAccessToken(System.String)">
            <summary>
            The access token is used when using the service id and certificate.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlusConnectRequest.SetCode(System.String)">
            <summary>
            The access code is used by the client to make authenticated requests on behalf of the end user. Requires clientId and clientsecret to be set
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlusConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlusConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlusConnectRequest.SetRedirectUri(System.String)">
            <summary>
            Only required when the access code has been granted using an explicit redirectUri, for example when using the mechanism described in https://developers.google.com/+/web/signin/server-side-flow
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlusConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlusConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.GooglePlusConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.IOSBuyGoodsRequest">
            <summary>
            Processes a transaction receipt from an App Store in app purchase.}
            The GameSparks platform will validate the receipt with Apple and process the response. The transaction_id in the response will be recorded and the request will be rejected if the transaction_id has previously been processed, this prevents replay attacks.}
            Once verified, the players account will be credited with the Virtual Good, or Virtual Currency the purchase contains. The virtual good will be looked up by matching the product_id in the response with the 'IOS Product ID' configured against the virtual good.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.IOSBuyGoodsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.IOSBuyGoodsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.IOSBuyGoodsRequest.SetCurrencyCode(System.String)">
            <summary>
            The ISO 4217 currency code representing the real-world currency used for this transaction.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.IOSBuyGoodsRequest.SetReceipt(System.String)">
            <summary>
            The receipt obtained from SKPaymentTransaction. transactionReceipt
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.IOSBuyGoodsRequest.SetSandbox(System.Boolean)">
            <summary>
            Should the sandbox account be used
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.IOSBuyGoodsRequest.SetSubUnitPrice(System.Double)">
            <summary>
            The price of this purchase
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.IOSBuyGoodsRequest.SetUniqueTransactionByPlayer(System.Boolean)">
            <summary>
            If set to true, the transactionId from this receipt will not be globally valdidated, this will mean replays between players are possible.
            It will only validate the transactionId has not been used by this player before.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.JoinChallengeRequest">
            <summary>
            Allows a player to join an open challenge.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinChallengeRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinChallengeRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinChallengeRequest.SetChallengeInstanceId(System.String)">
            <summary>
            The ID of the challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinChallengeRequest.SetEligibility(GameSparks.Core.GSRequestData)">
            <summary>
            Optional.  Allows the current player's eligibility to be overridden by what is provided here.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinChallengeRequest.SetMessage(System.String)">
            <summary>
            An optional message to send with the challenge
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.JoinPendingMatchRequest">
            <summary>
            Requests to join a pending match (found via FindPendingMatchesRequest).}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinPendingMatchRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinPendingMatchRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinPendingMatchRequest.SetMatchGroup(System.String)">
            <summary>
            Optional. The matchGroup of the match this player previously registeredfor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinPendingMatchRequest.SetMatchShortCode(System.String)">
            <summary>
            The shortCode of the match this player previously registered for
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinPendingMatchRequest.SetPendingMatchId(System.String)">
            <summary>
            The pending match ID to join
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.JoinTeamRequest">
            <summary>
            Allows a player to join a team or a team to be retrieved.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinTeamRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinTeamRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinTeamRequest.SetOwnerId(System.String)">
            <summary>
            The team owner to find, used in combination with teamType. If not supplied the current players id will be used
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinTeamRequest.SetTeamId(System.String)">
            <summary>
            The teamId to find (may be null if teamType supplied)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.JoinTeamRequest.SetTeamType(System.String)">
            <summary>
            The teamType to find, used in combination with the current player, or the player defined by ownerId
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.KongregateConnectRequest">
            <summary>
            Allows a Kongregate account to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the Kongregate platform and store them within GameSparks.}
            If the Kongregate user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Kongregate user is not already registered with the game, the Kongregate user will be linked to the current player.}
            If the current player has not authenticated and the Kongregate user is not known, a new player will be created using the Kongregate details and the session will be authenticated against the new player.}
            If the Kongregate user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.KongregateConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.KongregateConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.KongregateConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.KongregateConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.KongregateConnectRequest.SetGameAuthToken(System.String)">
            <summary>
            The gameAuthToken, together with the userID are used by the client to make authenticated requests on behalf of the end user.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.KongregateConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.KongregateConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.KongregateConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.KongregateConnectRequest.SetUserId(System.String)">
            <summary>
            The userID, together with the gameAuthToken are used by the client to make authenticated requests on behalf of the end user.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.LeaderboardDataRequest">
            <summary>
            Returns the top data for either the specified global leaderboard or the specified challenges leaderboard. The data is sorted as defined in the rules specified in the leaderboard configuration.}
            The response contains the top of the leaderboard, and returns the number of entries as defined in the entryCount parameter.}
            If a shortCode is supplied, the response will contain the global leaderboard data. If a challengeInstanceId is supplied, the response will contain the leaderboard data for the challenge.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetChallengeInstanceId(System.String)">
            <summary>
            The challenge instance to get the leaderboard data for
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetDontErrorOnNotSocial(System.Boolean)">
            <summary>
            The default behaviour on a social request is to error if the player has no friends (NOTSOCIAL).  Set this flag to suppress that error and return the player's leaderboard entry instead.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetEntryCount(System.Int64)">
            <summary>
            The number of items to return in a page (default=50)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetFriendIds(System.Collections.Generic.List{System.String})">
            <summary>
            A friend id or an array of friend ids to use instead of the player's social friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetIncludeFirst(System.Int64)">
            <summary>
            Number of entries to include from head of the list
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetIncludeLast(System.Int64)">
            <summary>
            Number of entries to include from tail of the list
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetInverseSocial(System.Boolean)">
            <summary>
            Returns the leaderboard excluding the player's social friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetLeaderboardShortCode(System.String)">
            <summary>
            The short code of the leaderboard
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetOffset(System.Int64)">
            <summary>
            The offset into the set of leaderboards returned
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetSocial(System.Boolean)">
            <summary>
            If True returns a leaderboard of the player's social friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetTeamIds(System.Collections.Generic.List{System.String})">
            <summary>
            The IDs of the teams you are interested in
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardDataRequest.SetTeamTypes(System.Collections.Generic.List{System.String})">
            <summary>
            The type of team you are interested in
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.LeaderboardsEntriesRequest">
            <summary>
            Get the leaderboard entry data for the current player or a given player.}
            For each leaderboard it returns the array of leaderboard entries that the player has.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardsEntriesRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardsEntriesRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardsEntriesRequest.SetChallenges(System.Collections.Generic.List{System.String})">
            <summary>
            The challenge leaderboards to return entries for
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardsEntriesRequest.SetInverseSocial(System.Boolean)">
            <summary>
            Returns the leaderboard excluding the player's social friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardsEntriesRequest.SetLeaderboards(System.Collections.Generic.List{System.String})">
            <summary>
            The list of leaderboards shortcodes
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardsEntriesRequest.SetPlayer(System.String)">
            <summary>
            The player id. Leave out to use the current player id
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardsEntriesRequest.SetSocial(System.Boolean)">
            <summary>
            Set to true to include the player's game friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaderboardsEntriesRequest.SetTeamTypes(System.Collections.Generic.List{System.String})">
            <summary>
            The types of team to apply this request to
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.LeaveTeamRequest">
            <summary>
            Allows a player to leave a team.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaveTeamRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaveTeamRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaveTeamRequest.SetOwnerId(System.String)">
            <summary>
            The team owner to find, used in combination with teamType. If not supplied the current players id will be used
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaveTeamRequest.SetTeamId(System.String)">
            <summary>
            The teamId to find (may be null if teamType supplied)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LeaveTeamRequest.SetTeamType(System.String)">
            <summary>
            The teamType to find, used in combination with the current player, or the player defined by ownerId
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListAchievementsRequest">
            <summary>
            Retrieves a list of the configured achievements in the game, along with whether the current player has earned the achievement.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListAchievementsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListAchievementsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListBulkJobsAdminRequest">
            <summary>
            Lists existing bulk jobs.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListBulkJobsAdminRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListBulkJobsAdminRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListBulkJobsAdminRequest.SetBulkJobIds(System.Collections.Generic.List{System.String})">
            <summary>
            The IDs of existing bulk jobs to get details for
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListChallengeRequest">
            <summary>
            Returns a list of challenges in the state defined in the 'state' field.}
            The response can be further filtered by passing a shortCode field which will limit the returned lists to challenges of that short code.}
            Valid states are:}
            WAITING : The challenge has been issued and accepted and is waiting for the start date.}
            RUNNING : The challenge is active.}
            ISSUED : The challenge has been issued by the current player and is waiting to be accepted.}
            RECEIVED : The challenge has been issued to the current player and is waiting to be accepted.}
            COMPLETE : The challenge has completed.}
            DECLINED : The challenge has been issued by the current player and has been declined.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListChallengeRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListChallengeRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListChallengeRequest.SetEntryCount(System.Int64)">
            <summary>
            The number of items to return in a page (default=50)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListChallengeRequest.SetOffset(System.Int64)">
            <summary>
            The offset (page number) to start from (default=0)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListChallengeRequest.SetShortCode(System.String)">
            <summary>
            The type of challenge to return
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListChallengeRequest.SetState(System.String)">
            <summary>
            The state of the challenged to be returned
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListChallengeRequest.SetStates(System.Collections.Generic.List{System.String})">
            <summary>
            The states of the challenges to be returned
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListChallengeTypeRequest">
            <summary>
            Returns the list of configured challenge types.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListChallengeTypeRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListChallengeTypeRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListGameFriendsRequest">
            <summary>
            Returns the list of the current players game friends.}
            A Game friend is someone in their social network who also plays the game.}
            Against each friend, an indicator is supplied to show whether the friend is currently connected to the GameSparks service}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListGameFriendsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListGameFriendsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListInviteFriendsRequest">
            <summary>
            Returns the list of the current players friends in their social network, who are not yet playing this game.}
            This is dependent on the security and privacy policies of the social network.}
            For example, Facebook's policies prevent this friend list being provided, whereas Twitter will supply a list of users who are not playing the game.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListInviteFriendsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListInviteFriendsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListLeaderboardsRequest">
            <summary>
            Returns a list of all leaderboards configured in the game.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListLeaderboardsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListLeaderboardsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListMessageDetailRequest">
            <summary>
            Returns the list of the current player's messages / notifications.}
            The list only contains un-dismissed messages, to dismiss a message see DismissMessageRequest Read the section on Messages to see the complete list of messages and their meaning.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageDetailRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageDetailRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageDetailRequest.SetEntryCount(System.Int64)">
            <summary>
            The number of items to return in a page (default=50)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageDetailRequest.SetInclude(System.String)">
            <summary>
            An optional filter that limits the message types returned
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageDetailRequest.SetOffset(System.Int64)">
            <summary>
            The offset (page number) to start from (default=0)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageDetailRequest.SetStatus(System.String)">
            <summary>
            The status of messages to be retrieved. If omitted, messages of all statuses will be retrieved
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListMessageRequest">
            <summary>
            Returns the list of the current player's messages / notifications.}
            The list only contains un-dismissed messages, to dismiss a message see DismissMessageRequest Read the section on Messages to see the complete list of messages and their meaning.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageRequest.SetEntryCount(System.Int64)">
            <summary>
            The number of items to return in a page (default=50)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageRequest.SetInclude(System.String)">
            <summary>
            An optional filter that limits the message types returned
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageRequest.SetOffset(System.Int64)">
            <summary>
            The offset (page number) to start from (default=0)
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListMessageSummaryRequest">
            <summary>
            Returns a summary of the list of the current players messages / notifications.}
            The list only contains un-dismissed messages, to dismiss a message see DismissMessageRequest.}
            The full message can be retrieved using GetMessageRequest Read the section on Messages to see the complete list of messages and their meanings.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageSummaryRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageSummaryRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageSummaryRequest.SetEntryCount(System.Int64)">
            <summary>
            The number of items to return in a page (default=50)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListMessageSummaryRequest.SetOffset(System.Int64)">
            <summary>
            The offset (page number) to start from (default=0)
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListTeamChatRequest">
            <summary>
            Get a list of the messages sent to the team (by players using SendTeamChatMessageRequest).}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamChatRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamChatRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamChatRequest.SetEntryCount(System.Int64)">
            <summary>
            The number of messages to return (default=50)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamChatRequest.SetOffset(System.Int64)">
            <summary>
            The offset (nth message) to start from (default=0)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamChatRequest.SetOwnerId(System.String)">
            <summary>
            The team owner to find, used in combination with teamType. If not supplied the current players id will be used
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamChatRequest.SetTeamId(System.String)">
            <summary>
            The teamId to find (may be null if teamType supplied)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamChatRequest.SetTeamType(System.String)">
            <summary>
            The teamType to find, used in combination with the current player, or the player defined by ownerId
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListTeamsRequest">
            <summary>
            Returns a list of teams. Can be filtered on team name or team type.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamsRequest.SetEntryCount(System.Int64)">
            <summary>
            The number of teams to return in a page (default=50)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamsRequest.SetOffset(System.Int64)">
            <summary>
            The offset (page number) to start from (default=0)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamsRequest.SetTeamNameFilter(System.String)">
            <summary>
            An optional filter to return teams with a matching name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTeamsRequest.SetTeamTypeFilter(System.String)">
            <summary>
            An optional filter to return teams of a particular type
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListTransactionsRequest">
            <summary>
            Returns a list of the current player's transaction history.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTransactionsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTransactionsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTransactionsRequest.SetDateFrom(System.DateTime)">
            <summary>
            Optional date constraint to list transactions from
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTransactionsRequest.SetDateTo(System.DateTime)">
            <summary>
            Optional date constraint to list transactions to
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTransactionsRequest.SetEntryCount(System.Int64)">
            <summary>
            The number of items to return in a page (default=50)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTransactionsRequest.SetInclude(System.String)">
            <summary>
            An optional filter that limits the transaction types returned
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListTransactionsRequest.SetOffset(System.Int64)">
            <summary>
            The offset (page number) to start from (default=0)
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ListVirtualGoodsRequest">
            <summary>
            Returns the list of configured virtual goods.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListVirtualGoodsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListVirtualGoodsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListVirtualGoodsRequest.SetIncludeDisabled(System.Boolean)">
            <summary>
            If true, the returned list will include disabled VirtualVoods
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ListVirtualGoodsRequest.SetTags(System.Collections.Generic.List{System.String})">
            <summary>
            A filter to only include goods with the given tags. Each good must have all the provided tags.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:GameSparks.Api.Requests.LogChallengeEventRequest" -->
        <member name="M:GameSparks.Api.Requests.LogChallengeEventRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LogChallengeEventRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LogChallengeEventRequest.SetChallengeInstanceId(System.String)">
            <summary>
            The ID challenge instance to target
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LogChallengeEventRequest.SetEventKey(System.String)">
            <summary>
            The short code of the event to trigger
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:GameSparks.Api.Requests.LogEventRequest" -->
        <member name="M:GameSparks.Api.Requests.LogEventRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LogEventRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.LogEventRequest.SetEventKey(System.String)">
            <summary>
            The short code of the event to trigger
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.MatchDetailsRequest">
            <summary>
            Find the details of an existing match this player belongs to, using the matchId}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchDetailsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchDetailsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchDetailsRequest.SetMatchId(System.String)">
            <summary>
            The matchId to find the details of
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchDetailsRequest.SetRealtimeEnabled(System.Boolean)">
            <summary>
            Adds realtime server details if the match has been created using Cloud Code and it has not been realtime enabled
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.MatchmakingRequest">
            <summary>
            Register this player for matchmaking, using the given skill and matchShortCode.}
            Players looking for a match using the same matchShortCode will be considered for a match, based on the matchConfig.}
            Each player must match the other for the match to be found.}
            If the matchShortCode points to a match with realtime enabled, in order to minimise latency, the location of Players and their proximity to one another takes precedence over their reciprocal skill values.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchmakingRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchmakingRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchmakingRequest.SetAction(System.String)">
            <summary>
            The action to take on the already in-flight request for this match. Currently supported actions are: 'cancel'
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchmakingRequest.SetCustomQuery(GameSparks.Core.GSRequestData)">
            <summary>
            The query that will be applied to the PendingMatch collection
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchmakingRequest.SetMatchData(GameSparks.Core.GSRequestData)">
            <summary>
            A JSON Map of any data that will be associated to the pending match
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchmakingRequest.SetMatchGroup(System.String)">
            <summary>
            Optional. Players will be grouped based on the distinct value passed in here, only players in the same group can be matched together
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchmakingRequest.SetMatchShortCode(System.String)">
            <summary>
            The shortCode of the match type this player is registering for
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchmakingRequest.SetParticipantData(GameSparks.Core.GSRequestData)">
            <summary>
            A JSON Map of any data that will be associated to this user in a pending match
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.MatchmakingRequest.SetSkill(System.Int64)">
            <summary>
            The skill of the player looking for a match
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.NXConnectRequest">
            <summary>
            Allows an Nintendo Network Service Account (NSA) to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the NSA and store them within GameSparks.}
            GameSparks will determine the player's friends and whether any of them are currently registered with the game.}
            If the NSA is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the NSA is not already registered with the game, the NSA will be linked to the current player.}
            If the current player has not authenticated and the NSA is not known, a new player will be created using the NSA details and the session will be authenticated against the new player.}
            If the NSA is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.NXConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.NXConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.NXConnectRequest.SetAccountPerLoginId(System.Boolean)">
            <summary>
            Whether to create one GameSparks player per console login ID
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.NXConnectRequest.SetDisplayName(System.String)">
            <summary>
            The display name of the current player from NX. This will be used as the displayName of the gamesparks player if created (or syncDisplayname is true)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.NXConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.NXConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.NXConnectRequest.SetNsaIdToken(System.String)">
            <summary>
            The NSA ID token obtained from Nintendo
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.NXConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.NXConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.NXConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.PSNConnectRequest">
            <summary>
            Allows a PSN account to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the PSN platform and store them within GameSparks.}
            GameSparks will determine the player's friends and whether any of them are currently registered with the game.}
            If the PSN user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the PSN user is not already registered with the game, the PSN user will be linked to the current player.}
            If the current player has not authenticated and the PSN user is not known, a new player will be created using the PSN details and the session will be authenticated against the new player.}
            If the PSN user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PSNConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PSNConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PSNConnectRequest.SetAuthorizationCode(System.String)">
            <summary>
            The authorization code obtained from PSN, as described here https://ps4.scedev.net/resources/documents/SDK/latest/NpAuth-Reference/0008.html
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PSNConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PSNConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PSNConnectRequest.SetRedirectUri(System.String)">
            <summary>
            When using the authorization code obtained from PlayStation®4/PlayStation®Vita/PlayStation®3, this is not required.
            When using the authorization code obtained with the PC authentication gateway, set the URI issued from the Developer Network website.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PSNConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PSNConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PSNConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.PsnBuyGoodsRequest">
            <summary>
            Processes an update of entitlement in PlayStation network.}
            The GameSparks platform will update the 'use_count' for an entitlement (by default 'use_count' is 1).}
            The request will be rejected if entitlement 'use_limit' is 0}
            GampSparks platform by default will use internally saved PSN user access token}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PsnBuyGoodsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PsnBuyGoodsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PsnBuyGoodsRequest.SetAuthorizationCode(System.String)">
            <summary>
            The authorization code obtained from PSN, as described here https://ps4.scedev.net/resources/documents/SDK/latest/NpAuth-Reference/0008.html
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PsnBuyGoodsRequest.SetCurrencyCode(System.String)">
            <summary>
            The ISO 4217 currency code representing the real-world currency used for this transaction.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PsnBuyGoodsRequest.SetEntitlementLabel(System.String)">
            <summary>
            Specify the entitlement label of the entitlement to update. (Not an entitlement ID).
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PsnBuyGoodsRequest.SetRedirectUri(System.String)">
            <summary>
            When using the authorization code obtained from PlayStation®4/PlayStation®Vita/PlayStation®3, this is not required.
            When using the authorization code obtained with the PC authentication gateway, set the URI issued from the Developer Network website.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PsnBuyGoodsRequest.SetSubUnitPrice(System.Double)">
            <summary>
            The price of this purchase
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PsnBuyGoodsRequest.SetUniqueTransactionByPlayer(System.Boolean)">
            <summary>
            If set to true, the transactionId from this receipt will not be globally valdidated, this will mean replays between players are possible.
            It will only validate the transactionId has not been used by this player before.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PsnBuyGoodsRequest.SetUseCount(System.Int64)">
            <summary>
            Optional - specify the quantity of the entitlement to use. Default = 1
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:GameSparks.Api.Requests.PushRegistrationRequest" -->
        <member name="M:GameSparks.Api.Requests.PushRegistrationRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PushRegistrationRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PushRegistrationRequest.SetDeviceOS(System.String)">
            <summary>
            The type of id, valid values are ios, android, fcm, wp8, w8, kindle or viber
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.PushRegistrationRequest.SetPushId(System.String)">
            <summary>
            The push notification identifier for the device
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.QQConnectRequest">
            <summary>
            Allows a QQ access token to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the QQ platform and store them within GameSparks.}
            If the QQ user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthenticationRequest or RegistrationRequest AND the QQ user is not already registered with the game, the QQ user will be linked to the current player.}
            If the current player has not authenticated and the QQ user is not known, a new player will be created using the QQ details and the session will be authenticated against the new player.}
            If the QQ user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.QQConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.QQConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.QQConnectRequest.SetAccessToken(System.String)">
            <summary>
            The access token is used by the client to make authenticated requests on behalf of the end user.
            When the access token expires, attempts to use it will fail, and a new access token must be obtained using the refresh token.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.QQConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.QQConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.QQConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.QQConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.QQConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.RegistrationRequest">
            <summary>
            Allows a new player to be created using a username, password display name.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.RegistrationRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.RegistrationRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.RegistrationRequest.SetDisplayName(System.String)">
            <summary>
            A display name to use
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.RegistrationRequest.SetPassword(System.String)">
            <summary>
            The previously registered password
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.RegistrationRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.RegistrationRequest.SetUserName(System.String)">
            <summary>
            The previously registered player name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.RevokePurchaseGoodsRequest">
            <summary>
            Revokes the purchase of a good. The items aquired will be removed from remaining items of the player.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.RevokePurchaseGoodsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.RevokePurchaseGoodsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.RevokePurchaseGoodsRequest.SetPlayerId(System.String)">
            <summary>
            The playerId for which to revoke the transaction
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.RevokePurchaseGoodsRequest.SetStoreType(System.String)">
            <summary>
            The store type for which to revoke these transactions
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.RevokePurchaseGoodsRequest.SetTransactionIds(System.Collections.Generic.List{System.String})">
            <summary>
            The list of transactionIds to revoke
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ScheduleBulkJobAdminRequest">
            <summary>
            Schedules a bulk job to be run against multiple players.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ScheduleBulkJobAdminRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ScheduleBulkJobAdminRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ScheduleBulkJobAdminRequest.SetData(GameSparks.Core.GSRequestData)">
            <summary>
            Optional data to be passed into the script
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ScheduleBulkJobAdminRequest.SetModuleShortCode(System.String)">
            <summary>
            The short code of the cloud code module to be executed against each player
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ScheduleBulkJobAdminRequest.SetPlayerQuery(GameSparks.Core.GSRequestData)">
            <summary>
            The query to be run against the player collection to identify which players to execute the cloud code for
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ScheduleBulkJobAdminRequest.SetScheduledTime(System.DateTime)">
            <summary>
            An optional date and time for this job to be run
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ScheduleBulkJobAdminRequest.SetScript(System.String)">
            <summary>
            The script to be executed against each player
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.SendFriendMessageRequest">
            <summary>
            Sends a message to one or more game friend(s). A game friend is someone in the players social network who also plays the game.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SendFriendMessageRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SendFriendMessageRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SendFriendMessageRequest.SetFriendIds(System.Collections.Generic.List{System.String})">
            <summary>
            One or more friend ID's. This can be supplied as a single string, or a JSON array
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SendFriendMessageRequest.SetMessage(System.String)">
            <summary>
            The message to send
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.SendTeamChatMessageRequest">
            <summary>
            Send a message to all the players who are member of the given team}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SendTeamChatMessageRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SendTeamChatMessageRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SendTeamChatMessageRequest.SetMessage(System.String)">
            <summary>
            The message to send
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SendTeamChatMessageRequest.SetOwnerId(System.String)">
            <summary>
            The team owner to find, used in combination with teamType. If not supplied the current players id will be used
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SendTeamChatMessageRequest.SetTeamId(System.String)">
            <summary>
            The teamId to find (may be null if teamType supplied)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SendTeamChatMessageRequest.SetTeamType(System.String)">
            <summary>
            The teamType to find, used in combination with the current player, or the player defined by ownerId
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.SocialDisconnectRequest">
            <summary>
            Allows a player's internal profile to be disconnected from an external system to which it is linked.  Any friends linked as result of this connection will be removed.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialDisconnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialDisconnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialDisconnectRequest.SetSystemId(System.String)">
            <summary>
            The external system from which to disconnect this profile, supplied as a two letter ID. The options are: {FACEBOOK:FB, AMAZON:AM, GAME_CENTER:GC
            GOOGLE_PLAY:GY , GOOGLE_PLUS:GP, KONGREGATE:KO, PSN:PS, QQ:QQ, STEAM:ST, TWITCH:TC, TWITTER:TW, VIBER:VB, WECHAT:WC, XBOX:XB
            XBOXONE:X1, NINTENDO:NX}
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.SocialLeaderboardDataRequest">
            <summary>
            Returns leaderboard data that only contains entries of players that are game friends with the current player.}
            The GameSparks platform will attempt to return players both ahead and behind the current player, where data is available.}
            The entry count defines how many player should be returned both ahead and behind. The numer of results may vary if there are not enough friends either ahead or behind.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetChallengeInstanceId(System.String)">
            <summary>
            The challenge instance to get the leaderboard data for
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetDontErrorOnNotSocial(System.Boolean)">
            <summary>
            The default behaviour on a social request is to error if the player has no friends (NOTSOCIAL).  Set this flag to suppress that error and return the player's leaderboard entry instead.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetEntryCount(System.Int64)">
            <summary>
            The number of items to return in a page (default=50)
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetFriendIds(System.Collections.Generic.List{System.String})">
            <summary>
            A friend id or an array of friend ids to use instead of the player's social friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetIncludeFirst(System.Int64)">
            <summary>
            Number of entries to include from head of the list
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetIncludeLast(System.Int64)">
            <summary>
            Number of entries to include from tail of the list
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetInverseSocial(System.Boolean)">
            <summary>
            Returns the leaderboard excluding the player's social friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetLeaderboardShortCode(System.String)">
            <summary>
            The short code of the leaderboard
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetOffset(System.Int64)">
            <summary>
            The offset into the set of leaderboards returned
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetSocial(System.Boolean)">
            <summary>
            If True returns a leaderboard of the player's social friends
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetTeamIds(System.Collections.Generic.List{System.String})">
            <summary>
            The IDs of the teams you are interested in
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialLeaderboardDataRequest.SetTeamTypes(System.Collections.Generic.List{System.String})">
            <summary>
            The type of team you are interested in
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.SocialStatusRequest">
            <summary>
            Returns detials of the current social connections of this player. Each connection .}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialStatusRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SocialStatusRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.SteamBuyGoodsRequest">
            <summary>
            Processes a 'orderid' from a Steam.}
            The GameSparks platform will validate the 'orderid' with Steam and process the response. The 'orderid' from the response will be recorded and the request will be rejected, if the 'orderid' has previously been processed, this prevents replay attacks.}
            Once verified, the players account will be credited with the Virtual Good, or Virtual Currency the purchase contains. The virtual good will be looked up by matching the 'itemid' in the response with the 'Steam Product ID' configured against the virtual good.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamBuyGoodsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamBuyGoodsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamBuyGoodsRequest.SetCurrencyCode(System.String)">
            <summary>
            The ISO 4217 currency code representing the real-world currency used for this transaction.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamBuyGoodsRequest.SetOrderId(System.String)">
            <summary>
            Unique 64-bit ID for order
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamBuyGoodsRequest.SetSubUnitPrice(System.Double)">
            <summary>
            The price of this purchase
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamBuyGoodsRequest.SetUniqueTransactionByPlayer(System.Boolean)">
            <summary>
            If set to true, the transactionId from this receipt will not be globally valdidated, this will mean replays between players are possible.
            It will only validate the transactionId has not been used by this player before.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.SteamConnectRequest">
            <summary>
            Allows a Steam sessionTicket to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the Steam platform and store them within GameSparks.}
            GameSparks will determine the player's friends and whether any of them are currently registered with the game.}
            If the Steam user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Steam user is not already registered with the game, the Steam user will be linked to the current player.}
            If the current player has not authenticated and the Steam user is not known, a new player will be created using the Steam details and the session will be authenticated against the new player.}
            If the Steam user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamConnectRequest.SetSessionTicket(System.String)">
            <summary>
            The hex encoded UTF-8 string representation of the ticket acquired calling the Steam SDKs GetAuthSessionTicket.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.SteamConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.TwitchConnectRequest">
            <summary>
            Allows a Twitch account to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the Twitch platform and store them within GameSparks.}
            If the Twitch user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Twitch user is not already registered with the game, the Twitch user will be linked to the current player.}
            If the current player has not authenticated and the Twitch user is not known, a new player will be created using the Twitch details and the session will be authenticated against the new player.}
            If the Twitch user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitchConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitchConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitchConnectRequest.SetAccessToken(System.String)">
            <summary>
            The access token is used by the client to make authenticated requests on behalf of the end user.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitchConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitchConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitchConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitchConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitchConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.TwitterConnectRequest">
            <summary>
            Allows a Twitter account to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the Twitter platform and store them within GameSparks.}
            GameSparks will determine the player's friends and whether any of them are currently registered with the game.}
            If the Twitter user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Twitter user is not already registered with the game, the Twitter user will be linked to the current player.}
            If the current player has not authenticated and the Twitter user is not known, a new player will be created using the Twitter details and the session will be authenticated against the new player.}
            If the Twitter user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitterConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitterConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitterConnectRequest.SetAccessSecret(System.String)">
            <summary>
            The accessSecret is obtained at the same time as the accessToken, and is required to sign requests to Twitter's services that require the accessToken.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitterConnectRequest.SetAccessToken(System.String)">
            <summary>
            The accessToken represents a player's permission to share access to their account with your application.
            To obtain an accessToken for the player see https://dev.twitter.com/docs/auth/obtaining-access-tokens.
            Currently, Twitter accessTokens do not expire but they can be revoked by the player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitterConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitterConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitterConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitterConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.TwitterConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.UpdateMessageRequest">
            <summary>
            Allows a message status to be updated.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.UpdateMessageRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.UpdateMessageRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.UpdateMessageRequest.SetMessageId(System.String)">
            <summary>
            The messageId of the message to update
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.UpdateMessageRequest.SetStatus(System.String)">
            <summary>
            The status to set on the message
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.ViberConnectRequest">
            <summary>
            Allows a Viber account to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the Viber platform and store them within GameSparks.}
            A successful authentication will also register the player to receive Viber push notifications.}
            GameSparks will determine the player's friends and whether any of them are currently registered with the game.}
            If the Viber user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Viber user is not already registered with the game, the Viber user will be linked to the current player.}
            If the current player has not authenticated and the Viber user is not known, a new player will be created using the Viber details and the session will be authenticated against the new player.}
            If the Viber user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ViberConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ViberConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ViberConnectRequest.SetAccessToken(System.String)">
            <summary>
            The accessToken represents a player's permission to share access to their account with your application.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ViberConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ViberConnectRequest.SetDoNotRegisterForPush(System.Boolean)">
            <summary>
            Does not automatocally register this user for push notifications. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ViberConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ViberConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ViberConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.ViberConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.WeChatConnectRequest">
            <summary>
            Allows a WeChat access token to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the WeChat platform and store them within GameSparks.}
            If the WeChat user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthenticationRequest or RegistrationRequest AND the WeChat user is not already registered with the game, the WeChat user will be linked to the current player.}
            If the current player has not authenticated and the WeChat user is not known, a new player will be created using the WeChat details and the session will be authenticated against the new player.}
            If the WeChat user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WeChatConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WeChatConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WeChatConnectRequest.SetAccessToken(System.String)">
            <summary>
            The access token sould be obtained from WeChat
            It is used by the client to make authenticated requests on behalf of the end user.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WeChatConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WeChatConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WeChatConnectRequest.SetOpenId(System.String)">
            <summary>
            The open ID corresponding to the WeChat user
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WeChatConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WeChatConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WeChatConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.WindowsBuyGoodsRequest">
            <summary>
            Processes a transaction receipt from a windows store purchase.}
            The GameSparks platform will validate the receipt using the signature embedded in the xml. The Id in the xml will be recorded and the request will be rejected if the Id has previously been processed, this prevents replay attacks.}
            Once verified, the players account will be credited with the Virtual Good, or Virtual Currency the purchase contains. The virtual good will be looked up by matching the productId in the xml with the 'WP8 Product ID' configured against the virtual good.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WindowsBuyGoodsRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WindowsBuyGoodsRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WindowsBuyGoodsRequest.SetCurrencyCode(System.String)">
            <summary>
            The ISO 4217 currency code representing the real-world currency used for this transaction.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WindowsBuyGoodsRequest.SetPlatform(System.String)">
            <summary>
            Allows you to specify the platform
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WindowsBuyGoodsRequest.SetReceipt(System.String)">
            <summary>
            The xml reciept returned from the windows phone 8 store
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WindowsBuyGoodsRequest.SetSubUnitPrice(System.Double)">
            <summary>
            The price of this purchase
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WindowsBuyGoodsRequest.SetUniqueTransactionByPlayer(System.Boolean)">
            <summary>
            If set to true, the transactionId from this receipt will not be globally valdidated, this will mean replays between players are possible.
            It will only validate the transactionId has not been used by this player before.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.WithdrawChallengeRequest">
            <summary>
            Withdraws a challenge previously issued by the current player.}
            This can only be done while the challenge is in the ISSUED state. Once it's been accepted the challenge can not be withdrawn.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WithdrawChallengeRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WithdrawChallengeRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WithdrawChallengeRequest.SetChallengeInstanceId(System.String)">
            <summary>
            The ID of the challenge
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.WithdrawChallengeRequest.SetMessage(System.String)">
            <summary>
            An optional message to send with the challenge
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.XBOXLiveConnectRequest">
            <summary>
            Allows an Xbox Live Shared Token String to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from the Xbox Live and store them within GameSparks.}
            GameSparks will determine the player's friends and whether any of them are currently registered with the game.}
            If the Xbox user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Xbox user is not already registered with the game, the Xbox user will be linked to the current player.}
            If the current player has not authenticated and the Xbox user is not known, a new player will be created using the Xbox details and the session will be authenticated against the new player.}
            If the Xbox user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XBOXLiveConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XBOXLiveConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XBOXLiveConnectRequest.SetDisplayName(System.String)">
            <summary>
            The displayName to set for the player in GameSparks
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XBOXLiveConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XBOXLiveConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XBOXLiveConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XBOXLiveConnectRequest.SetStsTokenString(System.String)">
            <summary>
            The access token is used by the client to make authenticated requests on behalf of the end user.
            It has a longer lifetime than the authorization code, typically on the order of minutes or hours.
            When the access token expires, attempts to use it will fail, and a new access token must be obtained via a refresh token.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XBOXLiveConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XBOXLiveConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Requests.XboxOneConnectRequest">
            <summary>
            Allows an Xbox One XSTS token to be used as an authentication mechanism.}
            Once authenticated the platform can determine the current players details from Xbox Live and store them within GameSparks.}
            If the Xbox One user is already linked to a player, the current session will switch to the linked player.}
            If the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Xbox One user is not already registered with the game, the Xbox One user will be linked to the current player.}
            If the current player has not authenticated and the Xbox One user is not known, a new player will be created using the Xbox Live details and the session will be authenticated against the new player.}
            If the Xbox One user is already known, the session will switch to being the previously created user.}
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XboxOneConnectRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XboxOneConnectRequest.#ctor(GameSparks.Core.GSInstance)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XboxOneConnectRequest.SetDoNotLinkToCurrentPlayer(System.Boolean)">
            <summary>
            Indicates that the server should not try to link the external profile with the current player.  If false, links the external profile to the currently signed in player.  If true, creates a new player and links the external profile to them.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XboxOneConnectRequest.SetErrorOnSwitch(System.Boolean)">
            <summary>
            Indicates whether the server should return an error if an account switch would have occurred, rather than switching automatically.  Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XboxOneConnectRequest.SetSandbox(System.String)">
            <summary>
            The Xbox Live sandbox to use. If not specified, the sandbox from the decoded token will be used.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XboxOneConnectRequest.SetSegments(GameSparks.Core.GSRequestData)">
            <summary>
            An optional segment configuration for this request.
            If this request creates a new player on the gamesparks platform, the segments of the new player will match the values provided
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XboxOneConnectRequest.SetSwitchIfPossible(System.Boolean)">
            <summary>
            Indicates that the server should switch to the supplied profile if it isalready associated to a player. Defaults to false.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XboxOneConnectRequest.SetSyncDisplayName(System.Boolean)">
            <summary>
            Indicates that the associated players displayName should be kept in syn with this profile when it's updated by the external provider.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Requests.XboxOneConnectRequest.SetToken(System.String)">
            <summary>
            The Xbox One authentication token
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AcceptChallengeResponse.ChallengeInstanceId">
            <summary>
            The ID of the challenge
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.Achievements">
            <summary>
            A JSON object containing the player's achievments
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.Currencies">
            <summary>
            A JSON object containing the player's currency balances
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.Currency1">
            <summary>
            The amount of type 1 currency that the player holds
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.Currency2">
            <summary>
            The amount of type 2 currency that the player holds
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.Currency3">
            <summary>
            The amount of type 3 currency that the player holds
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.Currency4">
            <summary>
            The amount of type 4 currency that the player holds
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.Currency5">
            <summary>
            The amount of type 5 currency that the player holds
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.Currency6">
            <summary>
            The amount of type 6 currency that the player holds
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.DisplayName">
            <summary>
            The player's display name
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.ExternalIds">
            <summary>
            A JSON object containing the player's external account details
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.Location">
            <summary>
            A JSON object containing the player's location
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.ReservedCurrencies">
            <summary>
            A JSON object containing the player's currency balances
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.ReservedCurrency1">
            <summary>
            The amount of type 1 currency that the player holds which is currently reserved
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.ReservedCurrency2">
            <summary>
            The amount of type 2 currency that the player holds which is currently reserved
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.ReservedCurrency3">
            <summary>
            The amount of type 3 currency that the player holds which is currently reserved
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.ReservedCurrency4">
            <summary>
            The amount of type 4 currency that the player holds which is currently reserved
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.ReservedCurrency5">
            <summary>
            The amount of type 5 currency that the player holds which is currently reserved
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.ReservedCurrency6">
            <summary>
            The amount of type 6 currency that the player holds which is currently reserved
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.UserId">
            <summary>
            The player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse.VirtualGoods">
            <summary>
            A JSON object containing the virtual goods that the player owns
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.AccountDetailsResponse._Location">
            <summary>
            Location details.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.AccountDetailsResponse._Location.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse._Location.City">
            <summary>
            The city
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse._Location.Country">
            <summary>
            The country
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse._Location.Latitide">
            <summary>
            The latitude
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AccountDetailsResponse._Location.Longditute">
            <summary>
            The longditute
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse.ChallengeInstanceId">
            <summary>
            The leaderboard's challenge id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse.Data">
            <summary>
            The leaderboard data
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse.First">
            <summary>
            The first item in the leaderboard data
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse.Last">
            <summary>
            The last item in the leaderboard data
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse.LeaderboardShortCode">
            <summary>
            The leaderboard short code
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse.Social">
            <summary>
            True if the response contains a social leaderboard's data
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.AroundMeLeaderboardResponse._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.AroundMeLeaderboardResponse._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AroundMeLeaderboardResponse._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AuthenticationResponse.AuthToken">
            <summary>
            44b297a8-162a-4220-8c14-dad9a1946ad2
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AuthenticationResponse.DisplayName">
            <summary>
            The player's display name
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AuthenticationResponse.NewPlayer">
            <summary>
            Indicates whether the player was created as part of this request
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AuthenticationResponse.SwitchSummary">
            <summary>
            A summary of the player that would be switched to.  Only returned as part of an error response for a request where automatic switching is disabled.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AuthenticationResponse.UserId">
            <summary>
            The player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.AuthenticationResponse._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.AuthenticationResponse._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AuthenticationResponse._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AuthenticationResponse._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AuthenticationResponse._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AuthenticationResponse._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AuthenticationResponse._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.AuthenticationResponse._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BatchAdminResponse.Responses">
            <summary>
            A map of responses by player ID
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.BoughtItems">
            <summary>
            A JSON object containing details of the bought items
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.CurrenciesAdded">
            <summary>
            An object containing the short code and amount added for each currency
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.Currency1Added">
            <summary>
            How much currency type 1 was added
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.Currency2Added">
            <summary>
            How much currency type 2 was added
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.Currency3Added">
            <summary>
            How much currency type 3 was added
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.Currency4Added">
            <summary>
            How much currency type 4 was added
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.Currency5Added">
            <summary>
            How much currency type 5 was added
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.Currency6Added">
            <summary>
            How much currency type 6 was added
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.CurrencyConsumed">
            <summary>
            For a buy with currency request, how much currency was used
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.CurrencyShortCode">
            <summary>
            For a buy with currency request, the short code of the currency used
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.CurrencyType">
            <summary>
            For a buy with currency request, which currency type was used
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.InvalidItems">
            <summary>
            A list of invalid items for this purchase (if any). This field is populated only for store buys
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse.TransactionIds">
            <summary>
            The list of transactionIds, for this purchase, if they exist. This field is populated only for store buys
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.BuyVirtualGoodResponse._Boughtitem">
            <summary>
            A nested object that represents a bought item.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.BuyVirtualGoodResponse._Boughtitem.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse._Boughtitem.Quantity">
            <summary>
            The quantity of the bought item
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.BuyVirtualGoodResponse._Boughtitem.ShortCode">
            <summary>
            The short code of the bought item
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse.BulkJobs">
            <summary>
            A list of JSON objects containing bulk jobs
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob">
            <summary>
            A nested object that represents the bulk job.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.ActualCount">
            <summary>
            The actual count of players affected by the bulk job (calculated when the job started to run)
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.Completed">
            <summary>
            The time at which the bulk job completed execution
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.Created">
            <summary>
            The time at which the bulk job was created
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.Data">
            <summary>
            Data to be passed into the Module or Script
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.DoneCount">
            <summary>
            The number of players processed by the bulk job so far
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.ErrorCount">
            <summary>
            The number of errors encountered whilst running the Module or Script for players
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.EstimatedCount">
            <summary>
            The estimated count of players affected by the bulk job (estimated when the job was submitted)
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.Id">
            <summary>
            The ID for the bulk job
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.ModuleShortCode">
            <summary>
            The Cloud Code Module to run for each player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.PlayerQuery">
            <summary>
            The query to identify players to perform the bulk job on
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.ScheduledTime">
            <summary>
            The time at which the job was scheduled to run
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.Script">
            <summary>
            The Cloud Code script to run for each player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.Started">
            <summary>
            The time at which the bulk job started to execute
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CancelBulkJobAdminResponse._BulkJob.State">
            <summary>
            The current state of the bulk job
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ChatOnChallengeResponse.ChallengeInstanceId">
            <summary>
            The challenge instance id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateChallengeResponse.ChallengeInstanceId">
            <summary>
            The challenge instance id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateTeamResponse.Members">
            <summary>
            The team members
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateTeamResponse.Owner">
            <summary>
            A summary of the owner
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateTeamResponse.TeamId">
            <summary>
            The Id of the team
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateTeamResponse.TeamName">
            <summary>
            The team name
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateTeamResponse.TeamType">
            <summary>
            The team type
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.CreateTeamResponse._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.CreateTeamResponse._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateTeamResponse._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateTeamResponse._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateTeamResponse._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateTeamResponse._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateTeamResponse._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.CreateTeamResponse._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.DeclineChallengeResponse.ChallengeInstanceId">
            <summary>
            The challenge instance id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.DismissMultipleMessagesResponse.FailedDismissals">
            <summary>
            A list of the messageId values that were not dismissed
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.DismissMultipleMessagesResponse.MessagesDismissed">
            <summary>
            An integer describing how many messages were dismissed
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.EndSessionResponse.SessionDuration">
            <summary>
            The length of this session
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse.ChallengeInstances">
            <summary>
            A list of JSON objects representing the challenges.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.FindChallengeResponse._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.FindChallengeResponse._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.FindChallengeResponse._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.FindChallengeResponse._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.FindChallengeResponse._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.FindChallengeResponse._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindChallengeResponse._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse.AccessToken">
            <summary>
            The accessToken used to authenticate this player for this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse.Host">
            <summary>
            The host to connect to for this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse.MatchData">
            <summary>
            MatchData is arbitrary data that can be stored in a Match instance by a Cloud Code script.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse.MatchId">
            <summary>
            The id for this match instance
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse.Opponents">
            <summary>
            The opponents this player has been matched against
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse.PeerId">
            <summary>
            The peerId of this player within the match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse.PlayerId">
            <summary>
            The id of the current player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse.Port">
            <summary>
            The port to connect to for this match
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.FindMatchResponse._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.FindMatchResponse._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindMatchResponse._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindPendingMatchesResponse.PendingMatches">
            <summary>
            A list of JSON objects containing pending matches
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch">
            <summary>
            An object that represents a pending match.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch.Id">
            <summary>
            The ID for the pending match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch.MatchData">
            <summary>
            A JSON Map of the matchData associated to this pending match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch.MatchGroup">
            <summary>
            The match group for the pending match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch.MatchShortCode">
            <summary>
            The match shortCode for the pending match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch.MatchedPlayers">
            <summary>
            The players already part of this pending match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch.Skill">
            <summary>
            The average skill of players in this pending match
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch._MatchedPlayer">
            <summary>
            An object that represents a player in a pending match.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch._MatchedPlayer.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch._MatchedPlayer.Location">
            <summary>
            The Location of the player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch._MatchedPlayer.ParticipantData">
            <summary>
            A JSON Map of any data that was associated to this user
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch._MatchedPlayer.PlayerId">
            <summary>
            The ID for player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.FindPendingMatchesResponse._PendingMatch._MatchedPlayer.Skill">
            <summary>
            The skill of the player in this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse.Challenge">
            <summary>
            A JSON object representing the challenge.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.GetChallengeResponse._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.GetChallengeResponse._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.GetChallengeResponse._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.GetChallengeResponse._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.GetChallengeResponse._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.GetChallengeResponse._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetChallengeResponse._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetDownloadableResponse.LastModified">
            <summary>
            The date when the downloadable item was last modified
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetDownloadableResponse.ShortCode">
            <summary>
            The short code of the item
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetDownloadableResponse.Size">
            <summary>
            The size of the item in bytes
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetDownloadableResponse.Url">
            <summary>
            The download URL
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetLeaderboardEntriesResponse.Results">
            <summary>
            The leaderboard entry data
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMessageResponse.Message">
            <summary>
            The message data
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMessageResponse.Status">
            <summary>
            The message status
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse.Teams">
            <summary>
            The team data
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.GetMyTeamsResponse._Team">
            <summary>
            A nested object that represents the team.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.GetMyTeamsResponse._Team.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse._Team.Members">
            <summary>
            The team members
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse._Team.Owner">
            <summary>
            A summary of the owner
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse._Team.TeamId">
            <summary>
            The Id of the team
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse._Team.TeamName">
            <summary>
            The team name
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse._Team.TeamType">
            <summary>
            The team type
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.GetMyTeamsResponse._Team._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.GetMyTeamsResponse._Team._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse._Team._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse._Team._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse._Team._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse._Team._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse._Team._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetMyTeamsResponse._Team._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetPropertyResponse.Property">
            <summary>
            The property value
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetPropertySetResponse.PropertySet">
            <summary>
            The property set
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse.Members">
            <summary>
            The team members
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse.Owner">
            <summary>
            A summary of the owner
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse.TeamId">
            <summary>
            The Id of the team
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse.TeamName">
            <summary>
            The team name
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse.TeamType">
            <summary>
            The team type
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse.Teams">
            <summary>
            A JSON array of teams.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.GetTeamResponse._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.GetTeamResponse._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.GetTeamResponse._Team">
            <summary>
            A nested object that represents the team.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.GetTeamResponse._Team.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Team.Members">
            <summary>
            The team members
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Team.Owner">
            <summary>
            A summary of the owner
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Team.TeamId">
            <summary>
            The Id of the team
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Team.TeamName">
            <summary>
            The team name
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Team.TeamType">
            <summary>
            The team type
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.GetTeamResponse._Team._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.GetTeamResponse._Team._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Team._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Team._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Team._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Team._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Team._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetTeamResponse._Team._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetUploadUrlResponse.Url">
            <summary>
            The time sensitive upload URL
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetUploadedResponse.Size">
            <summary>
            The size of the file in bytes
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.GetUploadedResponse.Url">
            <summary>
            A time sensitive URL to a piece of content
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinChallengeResponse.Joined">
            <summary>
            Whether the player successfully joined the challenge
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinPendingMatchResponse.PendingMatch">
            <summary>
            A JSON object containing the new pending match
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch">
            <summary>
            An object that represents a pending match.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch.Id">
            <summary>
            The ID for the pending match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch.MatchData">
            <summary>
            A JSON Map of the matchData associated to this pending match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch.MatchGroup">
            <summary>
            The match group for the pending match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch.MatchShortCode">
            <summary>
            The match shortCode for the pending match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch.MatchedPlayers">
            <summary>
            The players already part of this pending match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch.Skill">
            <summary>
            The average skill of players in this pending match
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch._MatchedPlayer">
            <summary>
            An object that represents a player in a pending match.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch._MatchedPlayer.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch._MatchedPlayer.Location">
            <summary>
            The Location of the player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch._MatchedPlayer.ParticipantData">
            <summary>
            A JSON Map of any data that was associated to this user
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch._MatchedPlayer.PlayerId">
            <summary>
            The ID for player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinPendingMatchResponse._PendingMatch._MatchedPlayer.Skill">
            <summary>
            The skill of the player in this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinTeamResponse.Members">
            <summary>
            The team members
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinTeamResponse.Owner">
            <summary>
            A summary of the owner
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinTeamResponse.TeamId">
            <summary>
            The Id of the team
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinTeamResponse.TeamName">
            <summary>
            The team name
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinTeamResponse.TeamType">
            <summary>
            The team type
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.JoinTeamResponse._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.JoinTeamResponse._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinTeamResponse._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinTeamResponse._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinTeamResponse._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinTeamResponse._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinTeamResponse._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.JoinTeamResponse._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse.ChallengeInstanceId">
            <summary>
            The leaderboard's challenge id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse.Data">
            <summary>
            The leaderboard data
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse.First">
            <summary>
            The first item in the leaderboard data
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse.Last">
            <summary>
            The last item in the leaderboard data
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse.LeaderboardShortCode">
            <summary>
            The leaderboard short code
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.LeaderboardDataResponse._LeaderboardData">
            <summary>
            Leaderboard entry data
            As well as the parameters below there may be others depending on your game's configuration.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.LeaderboardDataResponse._LeaderboardData.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse._LeaderboardData.City">
            <summary>
            The city where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse._LeaderboardData.Country">
            <summary>
            The country code where the player was located when they logged this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse._LeaderboardData.ExternalIds">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse._LeaderboardData.Rank">
            <summary>
            The players rank.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse._LeaderboardData.UserId">
            <summary>
            The unique player id for this leaderboard entry.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse._LeaderboardData.UserName">
            <summary>
            The players display name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardDataResponse._LeaderboardData.When">
            <summary>
            The date when this leaderboard entry was created.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaderboardsEntriesResponse.Results">
            <summary>
            The leaderboard entry data
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaveTeamResponse.Members">
            <summary>
            The team members
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaveTeamResponse.Owner">
            <summary>
            A summary of the owner
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaveTeamResponse.TeamId">
            <summary>
            The Id of the team
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaveTeamResponse.TeamName">
            <summary>
            The team name
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaveTeamResponse.TeamType">
            <summary>
            The team type
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.LeaveTeamResponse._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.LeaveTeamResponse._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaveTeamResponse._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaveTeamResponse._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaveTeamResponse._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaveTeamResponse._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaveTeamResponse._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.LeaveTeamResponse._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListAchievementsResponse.Achievements">
            <summary>
            A list of JSON achievment objects
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListAchievementsResponse._Achievement">
            <summary>
            A nested object that represents the achievement data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListAchievementsResponse._Achievement.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListAchievementsResponse._Achievement.Description">
            <summary>
            The desciption of the Achievement
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListAchievementsResponse._Achievement.Earned">
            <summary>
            Whether to current player has earned the achievement
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListAchievementsResponse._Achievement.Name">
            <summary>
            The name of the Achievement
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListAchievementsResponse._Achievement.PropertySet">
            <summary>
            The custom property set configured on this Achievement
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListAchievementsResponse._Achievement.ShortCode">
            <summary>
            The shortCode of the Achievement
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse.BulkJobs">
            <summary>
            A list of JSON objects containing bulk jobs
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob">
            <summary>
            A nested object that represents the bulk job.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.ActualCount">
            <summary>
            The actual count of players affected by the bulk job (calculated when the job started to run)
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.Completed">
            <summary>
            The time at which the bulk job completed execution
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.Created">
            <summary>
            The time at which the bulk job was created
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.Data">
            <summary>
            Data to be passed into the Module or Script
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.DoneCount">
            <summary>
            The number of players processed by the bulk job so far
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.ErrorCount">
            <summary>
            The number of errors encountered whilst running the Module or Script for players
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.EstimatedCount">
            <summary>
            The estimated count of players affected by the bulk job (estimated when the job was submitted)
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.Id">
            <summary>
            The ID for the bulk job
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.ModuleShortCode">
            <summary>
            The Cloud Code Module to run for each player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.PlayerQuery">
            <summary>
            The query to identify players to perform the bulk job on
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.ScheduledTime">
            <summary>
            The time at which the job was scheduled to run
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.Script">
            <summary>
            The Cloud Code script to run for each player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.Started">
            <summary>
            The time at which the bulk job started to execute
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListBulkJobsAdminResponse._BulkJob.State">
            <summary>
            The current state of the bulk job
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse.ChallengeInstances">
            <summary>
            A list of JSON objects representing the challenges.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListChallengeResponse._Challenge">
            <summary>
            A nested object that represents the challenge data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListChallengeResponse._Challenge.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.Accepted">
            <summary>
            A list of PlayerDetail objects that represents the players that have accepted this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.ChallengeId">
            <summary>
            A unique identifier for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.ChallengeMessage">
            <summary>
            The message included in the challenge by the challenging player who created the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.ChallengeName">
            <summary>
            The name of the challenge that this message relates to.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.Challenged">
            <summary>
            A list of PlayerDetail objects that represents the players that were challenged in this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.Challenger">
            <summary>
            Details of the player who issued this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.Currency1Wager">
            <summary>
            The amount of type 1 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.Currency2Wager">
            <summary>
            The amount of type 2 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.Currency3Wager">
            <summary>
            The amount of type 3 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.Currency4Wager">
            <summary>
            The amount of type 4 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.Currency5Wager">
            <summary>
            The amount of type 5 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.Currency6Wager">
            <summary>
            The amount of type 6 currency that has been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.CurrencyWagers">
            <summary>
            An object representing the currencies that have been wagered on this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.Declined">
            <summary>
            A list of PlayerDetail objects that represents the players that have declined this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.EndDate">
            <summary>
            The date when the challenge ends.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.ExpiryDate">
            <summary>
            The latest date that a player can accept the challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.MaxTurns">
            <summary>
            The maximum number of turns that this challenge is configured for.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.NextPlayer">
            <summary>
            In a turn based challenge this fields contains the player's id whose turn it is next.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.ShortCode">
            <summary>
            The challenge's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.StartDate">
            <summary>
            The date when the challenge starts.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.State">
            <summary>
            One of these possible state values: ISSUED, EXPIRED, ACCEPTED, DECLINED, COMPLETE, WITHDRAWN, RUNNING, WAITING, RECEIVED
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge.TurnCount">
            <summary>
            A collection containing the number of turns taken by each player that has accepted the challenge.
            Each turn count is a Long keyed on a String that represents the player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListChallengeResponse._Challenge._PlayerDetail">
            <summary>
            An object representing a player's id and name
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListChallengeResponse._Challenge._PlayerDetail.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge._PlayerDetail.ExternalIds">
            <summary>
            A player's external identifiers
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge._PlayerDetail.Id">
            <summary>
            A player's id
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge._PlayerDetail.Name">
            <summary>
            A player's name
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListChallengeResponse._Challenge._PlayerTurnCount">
            <summary>
            Represents the number of turns a player has taken in a turn based challenge.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListChallengeResponse._Challenge._PlayerTurnCount.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge._PlayerTurnCount.Count">
            <summary>
            The number of turns that the player has taken so far during this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeResponse._Challenge._PlayerTurnCount.PlayerId">
            <summary>
            The unique player id.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeTypeResponse.ChallengeTemplates">
            <summary>
            A list of JSON objects containing the challenge templates for the game
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListChallengeTypeResponse._ChallengeType">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListChallengeTypeResponse._ChallengeType.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeTypeResponse._ChallengeType.ChallengeShortCode">
            <summary>
            The shortCode for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeTypeResponse._ChallengeType.Description">
            <summary>
            The description of this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeTypeResponse._ChallengeType.GetleaderboardName">
            <summary>
            The name of the leaderboard for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeTypeResponse._ChallengeType.Name">
            <summary>
            The name of this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListChallengeTypeResponse._ChallengeType.Tags">
            <summary>
            The tags for this challenge.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListGameFriendsResponse.Friends">
            <summary>
            A list of JSON objects containing game friend data
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListGameFriendsResponse._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListGameFriendsResponse._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListGameFriendsResponse._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListGameFriendsResponse._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListGameFriendsResponse._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListGameFriendsResponse._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListGameFriendsResponse._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListGameFriendsResponse._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListInviteFriendsResponse.Friends">
            <summary>
            A list of JSON objects containing game friend data
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListInviteFriendsResponse._InvitableFriend">
            <summary>
            A nested object that represents the invitable friend.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListInviteFriendsResponse._InvitableFriend.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListInviteFriendsResponse._InvitableFriend.DisplayName">
            <summary>
            The display name of the External Friend
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListInviteFriendsResponse._InvitableFriend.Id">
            <summary>
            The ID of the External Friend
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListInviteFriendsResponse._InvitableFriend.ProfilePic">
            <summary>
            The profile picture URL of the External Friend
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListLeaderboardsResponse.Leaderboards">
            <summary>
            A list of JSON object containing leaderboard meta data
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListLeaderboardsResponse._Leaderboard">
            <summary>
            A nested object that represents the leaderboard configuration data.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListLeaderboardsResponse._Leaderboard.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListLeaderboardsResponse._Leaderboard.Description">
            <summary>
            The leaderboard's description.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListLeaderboardsResponse._Leaderboard.Name">
            <summary>
            The leaderboard's name.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListLeaderboardsResponse._Leaderboard.PropertySet">
            <summary>
            The custom property set configured on this Leaderboard
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListLeaderboardsResponse._Leaderboard.ShortCode">
            <summary>
            The leaderboard's short code.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListMessageDetailResponse.MessageList">
            <summary>
            A list of JSON objects containing player messages
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListMessageDetailResponse._PlayerMessage">
            <summary>
            A nested object that represents a player message.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListMessageDetailResponse._PlayerMessage.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListMessageDetailResponse._PlayerMessage.Id">
            <summary>
            The id of the message
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListMessageDetailResponse._PlayerMessage.Message">
            <summary>
            The message content
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListMessageDetailResponse._PlayerMessage.Seen">
            <summary>
            Whether the message has been delivered to the client
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListMessageDetailResponse._PlayerMessage.Status">
            <summary>
            The status of the message
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListMessageDetailResponse._PlayerMessage.When">
            <summary>
            The date of the message
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListMessageResponse.MessageList">
            <summary>
            A list of JSON objects containing player messages
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListMessageSummaryResponse.MessageList">
            <summary>
            A list of JSON objects containing player message summaries
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamChatResponse.Messages">
            <summary>
            The collection of team chat messages
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListTeamChatResponse._ChatMessage">
            <summary>
            A message from a group chat
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListTeamChatResponse._ChatMessage.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamChatResponse._ChatMessage.FromId">
            <summary>
            The id of the player who sent this message
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamChatResponse._ChatMessage.Id">
            <summary>
            The id of this chat message
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamChatResponse._ChatMessage.Message">
            <summary>
            The text sent in this message
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamChatResponse._ChatMessage.When">
            <summary>
            A date representing the time this message was sent
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamChatResponse._ChatMessage.Who">
            <summary>
            The displayName of the player who sent this message
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamsResponse.Teams">
            <summary>
            A list of JSON objects containing team information
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListTeamsResponse._Team">
            <summary>
            A nested object that represents the team. This object does not contain a list of the members.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListTeamsResponse._Team.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamsResponse._Team.Owner">
            <summary>
            A summary of the owner
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamsResponse._Team.TeamId">
            <summary>
            The Id of the team
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamsResponse._Team.TeamName">
            <summary>
            The team name
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamsResponse._Team.TeamType">
            <summary>
            The team type
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListTeamsResponse._Team._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListTeamsResponse._Team._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamsResponse._Team._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamsResponse._Team._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamsResponse._Team._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamsResponse._Team._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamsResponse._Team._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTeamsResponse._Team._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse.TransactionList">
            <summary>
            A list of JSON objects containing player transactions
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction">
            <summary>
            A nested object that represents a player transaction.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction.Items">
            <summary>
            The items (currency or virtual goods) involved in this transaction
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction.OriginalRequestId">
            <summary>
            The original request ID for this transaction
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction.PlayerId">
            <summary>
            The player ID
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction.Reason">
            <summary>
            The reason for the transaction
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction.RevokeDate">
            <summary>
            Gets the date when this transaction was revoked, if applicable
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction.Revoked">
            <summary>
            Is true if the transaction was revoked
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction.Script">
            <summary>
            The specific script in which this transaction occurred
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction.ScriptType">
            <summary>
            The script type in which this transaction occurred (e.g. event)
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction.TransactionId">
            <summary>
            The transaction ID of this purchase, if applicable
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction.When">
            <summary>
            The date of the transaction
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction._PlayerTransactionItem">
            <summary>
            A nested object that represents a single item in a transaction.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction._PlayerTransactionItem.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction._PlayerTransactionItem.Amount">
            <summary>
            The amount of this item given to the player in the transaction
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction._PlayerTransactionItem.NewValue">
            <summary>
            The quantity the player possesses after the transaction completed
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListTransactionsResponse._PlayerTransaction._PlayerTransactionItem.Type">
            <summary>
            The type of item
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse.VirtualGoods">
            <summary>
            A list of JSON objects containing virtual goods data
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood">
            <summary>
            A nested object that represents the virtual good.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.WP8StoreProductId">
            <summary>
            The Windows Phone 8 productId of the item.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.AmazonStoreProductId">
            <summary>
            The Amazon Store productId of the item.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.BaseCurrency1Cost">
            <summary>
            The Base Currency1 cost of the Virtual Good, before segmentation
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.BaseCurrency2Cost">
            <summary>
            The Base Currency2 cost of the Virtual Good, before segmentation
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.BaseCurrency3Cost">
            <summary>
            The Base Currency3 cost of the Virtual Good, before segmentation
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.BaseCurrency4Cost">
            <summary>
            The Base Currency4 cost of the Virtual Good, before segmentation
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.BaseCurrency5Cost">
            <summary>
            The Base Currency5 cost of the Virtual Good, before segmentation
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.BaseCurrency6Cost">
            <summary>
            The Base Currency6 cost of the Virtual Good, before segmentation
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.BaseCurrencyCosts">
            <summary>
            The Base currency costs of the Virtual Good, before experiments
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.BundledGoods">
            <summary>
            Returns the bundle goods of the virtual good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.Currency1Cost">
            <summary>
            The Currency1 cost of the Virtual Good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.Currency2Cost">
            <summary>
            The Currency2 cost of the Virtual Good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.Currency3Cost">
            <summary>
            The Currency3 cost of the Virtual Good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.Currency4Cost">
            <summary>
            The Currency4 cost of the Virtual Good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.Currency5Cost">
            <summary>
            The Currency5 cost of the Virtual Good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.Currency6Cost">
            <summary>
            The Currency6 cost of the Virtual Good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.CurrencyCosts">
            <summary>
            The currency costs of the Virtual Good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.Description">
            <summary>
            The description of the Virtual Good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.Disabled">
            <summary>
            Whether the item is disabled.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.GooglePlayProductId">
            <summary>
            The google play productId of the item.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.IosAppStoreProductId">
            <summary>
            The iOS AppStore productId of the item.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.MaxQuantity">
            <summary>
            The maximum number of the Virtual Good that can be owned at one time
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.Name">
            <summary>
            The name of the Virtual Good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.PropertySet">
            <summary>
            The custom property set configured on the item.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.PsnStoreProductId">
            <summary>
            The PSN Store productId of the item.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.SegmentedCurrency1Cost">
            <summary>
            The Segmented Currency1 cost of the Virtual Good, before experiments
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.SegmentedCurrency2Cost">
            <summary>
            The Segmented Currency2 cost of the Virtual Good, before experiments
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.SegmentedCurrency3Cost">
            <summary>
            The Segmented Currency3 cost of the Virtual Good, before experiments
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.SegmentedCurrency4Cost">
            <summary>
            The Segmented Currency4 cost of the Virtual Good, before experiments
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.SegmentedCurrency5Cost">
            <summary>
            The Segmented Currency5 cost of the Virtual Good, before experiments
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.SegmentedCurrency6Cost">
            <summary>
            The Segmented Currency6 cost of the Virtual Good, before experiments
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.SegmentedCurrencyCosts">
            <summary>
            The segmented currency costs of the Virtual Good, before experiments
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.ShortCode">
            <summary>
            The short code of the Virtual Good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.SteamStoreProductId">
            <summary>
            The Steam Store productId of the item.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.Tags">
            <summary>
            The tags of the Virtual Good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.Type">
            <summary>
            The type of the virtual good, "VGOOD" or "CURRENCY"
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood.W8StoreProductId">
            <summary>
            The Windows 8 productId of the item.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood._BundledGood">
            <summary>
            A collection of arbitrary data that can be added to a message via a Cloud Code script.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood._BundledGood.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood._BundledGood.Qty">
            <summary>
            The number of items bundled
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ListVirtualGoodsResponse._VirtualGood._BundledGood.ShortCode">
            <summary>
            The shortCode of the bundled good
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse.AccessToken">
            <summary>
            The accessToken used to authenticate this player for this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse.Host">
            <summary>
            The host to connect to for this match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse.MatchData">
            <summary>
            MatchData is arbitrary data that can be stored in a Match instance by a Cloud Code script.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse.MatchId">
            <summary>
            The id for this match instance
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse.Opponents">
            <summary>
            The opponents this player has been matched against
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse.PeerId">
            <summary>
            The peerId of this player within the match
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse.PlayerId">
            <summary>
            The id of the current player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse.Port">
            <summary>
            The port to connect to for this match
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.MatchDetailsResponse._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.MatchDetailsResponse._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.MatchDetailsResponse._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.PushRegistrationResponse.RegistrationId">
            <summary>
            An identifier for the successful registration.  Clients should store this value to be used in the event the player no longer wants to receive push notifications to this device.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RegistrationResponse.AuthToken">
            <summary>
            44b297a8-162a-4220-8c14-dad9a1946ad2
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RegistrationResponse.DisplayName">
            <summary>
            The player's display name
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RegistrationResponse.NewPlayer">
            <summary>
            Indicates whether the player was created as part of this request
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RegistrationResponse.SwitchSummary">
            <summary>
            A summary of the player that would be switched to.  Only returned as part of an error response for a request where automatic switching is disabled.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RegistrationResponse.UserId">
            <summary>
            The player's id
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.RegistrationResponse._Player">
            <summary>
            A nested object that represents a player.
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.RegistrationResponse._Player.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RegistrationResponse._Player.Achievements">
            <summary>
            The achievements of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RegistrationResponse._Player.DisplayName">
            <summary>
            The display name of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RegistrationResponse._Player.ExternalIds">
            <summary>
            The external Id's of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RegistrationResponse._Player.Id">
            <summary>
            The Id of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RegistrationResponse._Player.Online">
            <summary>
            The online status of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RegistrationResponse._Player.VirtualGoods">
            <summary>
            The virtual goods of the Player
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.RevokePurchaseGoodsResponse.RevokedGoods">
            <summary>
            The map of revoked goods
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ScheduleBulkJobAdminResponse.EstimatedCount">
            <summary>
            The count of players who would be affected by this job if it ran at the time it was submitted
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.ScheduleBulkJobAdminResponse.JobId">
            <summary>
            The unique job ID, used to identify this job in future requests
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.SocialStatusResponse.Statuses">
            <summary>
            A list of social statuses.
            </summary>
        </member>
        <member name="T:GameSparks.Api.Responses.SocialStatusResponse._SocialStatus">
            <summary>
            A the details of a social connection
            </summary>
        </member>
        <member name="M:GameSparks.Api.Responses.SocialStatusResponse._SocialStatus.#ctor(GameSparks.Core.GSData)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.SocialStatusResponse._SocialStatus.Active">
            <summary>
            When the token is still active.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.SocialStatusResponse._SocialStatus.Expires">
            <summary>
            When the token expires (if available).
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.SocialStatusResponse._SocialStatus.SystemId">
            <summary>
            The identifier of the external platform.
            </summary>
        </member>
        <member name="P:GameSparks.Api.Responses.WithdrawChallengeResponse.ChallengeInstanceId">
            <summary>
            A challenge instance id
            </summary>
        </member>
        <member name="T:GameSparks.Core.GS">
            <summary>
            This is a static class, which automatically instantiates the default <see cref="T:GameSparks.Core.GSInstance"/> and handles it. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GS.Initialise(GameSparks.Core.IGSPlatform)">
            <summary>
            Initialise GameSparks with a given platform implementation. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GS.ShutDown">
            <summary>
            This will end the remote session and stop all connections. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GS.Disconnect">
            <summary>
            Stops all connections. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GS.Reconnect">
            <summary>
            Reconnect to the GameSparks service. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GS.Reset">
            <summary>
            Stops all connections, resets the authentication token and establishes a new connection to the service. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GS.SendDurable(GameSparks.Core.GSRequest)">
            <summary>
            Send the given request durable. 
            Durable requests are persisted automatically. 
            If it cannot be send right now the sdk will try to send it later. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GS.Send(GameSparks.Core.GSRequest)">
            <summary>
            Send the given request. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GS.GSPlatform">
            <summary>
            Returns the currently used platform specific implementation. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GS.Version">
            <summary>
            Describes the current version of the sdk. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GS.Instance">
            <summary>
            Currently active GameSparks service instance. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GS.Available">
            <summary>
            True if a connection to the service is available for use. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GS.Authenticated">
            <summary>
            True if a connection is available and the user is authenticated. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GS.GameSparksAvailable">
            <summary>
            Callback which is triggered whenever the service becomes available or the connection to the service is lost. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GS.GameSparksAuthenticated">
            <summary>
            Callback which is triggered whenever the service becomes available or the connection to the service is lost. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GS.TraceMessages">
            <summary>
            If set true the SDK will provide debug information via <see cref="M:GameSparks.Core.IGSPlatform.DebugMsg(System.String)"/>
            </summary>
        </member>
        <member name="P:GameSparks.Core.GS.DurableQueueCount">
            <summary>
            Whenever a durable request is sent it is added to the durable queue. 
            This can be used to determine how many requests are pending to be sent. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.GS.RequestQueueCount">
            <summary>
            Whenever a request is sent it is added to a request queue. 
            Each request has its own time out. 
            This can used to determine how many requests are not yet sent or have not yet timed out. 
            </summary>
        </member>
        <member name="T:GameSparks.Core.GSJson">
            <summary>
            Static GameSparks JSon parser implementation. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSJson.From(System.String)">
            <summary>
            Convert json string to an Object. 
            This might be a List of Objects if something like this is provided: "[1,2,3]".
            Or it might be a Dictionary of Objects with String keys if a typical Json string is provided: "{"myKey":"myValue"}". 
            </summary>
            <param name="json">a typical json string</param>
            <returns></returns>
        </member>
        <member name="M:GameSparks.Core.GSJson.To(System.Object)">
            <summary>
            Converts a IDictionary / IList object or a simple type (string, int, etc.) into a JSON string
            </summary>
            <param name="obj">A Dictionary&lt;string, object&gt; / List&lt;object&gt;</param>
            <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>
        </member>
        <member name="T:GameSparks.Core.GSRequest">
            <summary>
            Base class for all GameSparks requests. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new request with the given data. 
            This is the base class for all requests. 
            You should never need to use it directly. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequest.#ctor(System.String)">
            <summary>
            Create a new request based on its type. 
            This needs to be a valid requestType as exposed by the GameSparks Service. 
            This is the base class for all requests. 
            You should never need to use it directly. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequest.#ctor(GameSparks.Core.GSInstance,System.String)">
            <summary>
            Create a new request based on its type. 
            This needs to be a valid requestType as exposed by the GameSparks Service. 
            This is the base class for all requests. 
            You should never need to use it directly. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequest.HasCallbacks">
            <summary>
            Determines whether this instance has callbacks set.
            </summary>
            <returns><c>true</c> if this instance has callbacks; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:GameSparks.Core.GSRequest.SetCallbacks(System.Action{GameSparks.Core.GSObject},System.Action{GameSparks.Core.GSObject})">
            <summary>
            Sets the success and error callbacks. Useful when managing the Durable queue after a app restart
            </summary>
            <param name="successCallback">Success callback.</param>
            <param name="errorCallback">Error callback.</param>
        </member>
        <member name="M:GameSparks.Core.GSRequest.SetCallback(System.Action{GameSparks.Core.GSObject})">
            <summary>
            Sets the main callback.
            </summary>
            <param name="callback">Callback.</param>
        </member>
        <member name="M:GameSparks.Core.GSRequest.AddString(System.String,System.String)">
            <summary>
            Add a string value to the request
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequest.AddDate(System.String,System.DateTime)">
            <summary>
            Add a DateTime value to the request
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequest.AddNumber(System.String,System.Int64)">
            <summary>
            Add a number value to the request
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequest.AddObject(System.String,GameSparks.Core.GSData)">
            <summary>
            Add a data value to the request. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequest.AddObjectList(System.String,System.Collections.Generic.List{GameSparks.Core.GSData})">
            <summary>
            Add a list of data objects to the request
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequest.AddStringList(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Add a list of strings to the request. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.GSRequest.AddBoolean(System.String,System.Boolean)">
            <summary>
            Add a boolean value to the request.
            </summary>
        </member>
        <member name="T:GameSparks.Core.IGSPlatform">
            <summary>
            Platform specific interface to help GameSparks SDK to run on a multitude of platforms and frameworks. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.IGSPlatform.DebugMsg(System.String)">
            <summary>
            Recieves debugging information from the API
            </summary>
        </member>
        <member name="M:GameSparks.Core.IGSPlatform.ExecuteOnMainThread(System.Action)">
            <summary>
            Execute the given Action on the main thread. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.IGSPlatform.GetTimer">
            <summary>
            Returns a new Instance of a <see cref="T:GameSparks.IGameSparksTimer"/>. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.IGSPlatform.MakeHmac(System.String,System.String)">
            <summary>
            Returns a hmac created with SHA-256 based on the given parameters. 
            </summary>
        </member>
        <member name="M:GameSparks.Core.IGSPlatform.GetSocket(System.String,System.Action{System.String},System.Action,System.Action,System.Action{System.String})">
            <summary>
            Returns a platform specific instance of <see cref="T:GameSparks.IGameSparksWebSocket"/>. 
            Also sets the target Url for the socket and the relevant callback actions. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.IGSPlatform.DeviceId">
            <summary>
            Gets a unique identifier for the device
            </summary>
        </member>
        <member name="P:GameSparks.Core.IGSPlatform.DeviceOS">
            <summary>
            IOS or AND or WP8 - Required for in app purchases
            </summary>
        </member>
        <member name="P:GameSparks.Core.IGSPlatform.Platform">
            <summary>
            Will be used in analytics reports
            </summary>
        </member>
        <member name="P:GameSparks.Core.IGSPlatform.SDK">
            <summary>
            Will be used in analytics reports
            </summary>
        </member>
        <member name="P:GameSparks.Core.IGSPlatform.DeviceType">
            <summary>
            Will be used in analytics reports
            </summary>
        </member>
        <member name="P:GameSparks.Core.IGSPlatform.ExtraDebug">
            <summary>
            Set to true to get extended debugging information
            </summary>
        </member>
        <member name="P:GameSparks.Core.IGSPlatform.AuthToken">
            <summary>
            Reusable AuthToken. Should be stored persistently when set. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.IGSPlatform.UserId">
            <summary>
            The UserId of the player currently authenticated. 
            </summary>
        </member>
        <member name="P:GameSparks.Core.IGSPlatform.PersistentDataPath">
            <summary>
            A path to a location where persistent storage can take place. 
            </summary>
        </member>
        <member name="T:GameSparks.Api.GSHelper">
            <summary>
            Provides several static helper functions
            </summary>
        </member>
        <member name="M:GameSparks.Api.GSHelper.GetDownloadableRequestAndDownloadFile">
            <summary>
            Sets up a GetDownloadableRequest that will return a GetDownloadableResponse
            With a byte[] in it at key "bytes" representing the bytes of the file. To access
            use response.JSONData["bytes"]
            </summary>
        </member>
        <member name="M:GameSparks.Api.GSHelper.GetUploadUrlRequestAndUploadFile(System.Byte[],System.String)">
            <summary>
            Sets up a GetUploadUrlRequest that will upload the bytes supplied to the correct
            location after the response has been received
            </summary>
        </member>
        <member name="T:GameSparks.Api.GSMessageHandler">
            <summary>
            Static message handler. 
            Receives all GameSparks Messages. 
            Used for debugging. 
            </summary>
        </member>
        <member name="F:GameSparks.Api.GSMessageHandler._AllMessages">
            <summary>
            Register a custom handler to receive all GameSparks Messages here. 
            </summary>
        </member>
    </members>
</doc>
